bad ideas:
	letting the MMU handle illegal accesses to low 128K of memory - MMU has to sit between processor and memory
	remove pullup on AS - there to prevent spurious memory acceses once bus master is done and CPU has not relinquished control of the bus yet
	having the processor wait for the UART host to transmit a binary - will hang if the board should be booting from a stored EEPROM program
	supervisor access only to EEPROM - prevents user from using hardware libs, initial supervisor -> user jump is awkward at best
	having MFP drive IRQ lines directly - if a priority level 2 interrupt and level 1 interrupt fire at the same time, the processor will register a level 3 interrupt.

maybe ideas:
	having an MMU board at all - 68451 chip is kinda hard to find on eBay and pretty expensive too, couldn't find a PLCC package for it
	
ideas for add-on boards:
	
	NOTE: all add-on boards have to have space for a board to be stacked on top of them, PC104 style
	
	Interface options:
		SPI using the MFP I/O pins - slow, but easier to implement
		External device grabs host memory using DMA (FPGA or CPLD with microcontroller)
			significantly faster
			harder to design
			requires host board modification since the DMA functionality is broken currently
		Dual-ported RAM
			a good idea for video stuff, especially 3D applications
		FIFO chips
			good for ingesting lots of fast data

