0x00000 -> 0x1FFFF: EEPROM
	0x0 -> 0x400: EVT
	0x400 -> 0x1FFFF: Bootloader and uart lib code
0x20000 -> 0x3FFFF: SRAM
	(application defines how RAM is used)
0x40000 -> 0x40001: ACIA Peripheral

EEPROM booloader code starts at 0x400, application code starts at 0x1000?

still need to do housekeeping such as zeroing out .bss section because no OS will do it for us

cannot load anything into SRAM at assemble time (yet, bootloader could do that for us)

calling convention:
	everything is callee-saved except for a0, a1, d0, and d1
	pass everything on the stack as a long, eliminates alignment issues and we have the space for it

