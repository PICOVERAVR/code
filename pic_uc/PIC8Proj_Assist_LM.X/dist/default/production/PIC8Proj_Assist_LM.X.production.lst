

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Aug 31 17:53:09 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.41
    23                           ; Generated 25/01/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC12F1572 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  008C                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011D                     	;# 
   106  011D                     	;# 
   107  018C                     	;# 
   108  0191                     	;# 
   109  0191                     	;# 
   110  0192                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0194                     	;# 
   114  0195                     	;# 
   115  0196                     	;# 
   116  0197                     	;# 
   117  0199                     	;# 
   118  019A                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019D                     	;# 
   123  019E                     	;# 
   124  019F                     	;# 
   125  020C                     	;# 
   126  028C                     	;# 
   127  030C                     	;# 
   128  038C                     	;# 
   129  0391                     	;# 
   130  0392                     	;# 
   131  0393                     	;# 
   132  0691                     	;# 
   133  0692                     	;# 
   134  0693                     	;# 
   135  0694                     	;# 
   136  0695                     	;# 
   137  0D8E                     	;# 
   138  0D8F                     	;# 
   139  0D90                     	;# 
   140  0D91                     	;# 
   141  0D91                     	;# 
   142  0D92                     	;# 
   143  0D93                     	;# 
   144  0D93                     	;# 
   145  0D94                     	;# 
   146  0D95                     	;# 
   147  0D95                     	;# 
   148  0D96                     	;# 
   149  0D97                     	;# 
   150  0D97                     	;# 
   151  0D98                     	;# 
   152  0D99                     	;# 
   153  0D99                     	;# 
   154  0D9A                     	;# 
   155  0D9B                     	;# 
   156  0D9C                     	;# 
   157  0D9C                     	;# 
   158  0D9D                     	;# 
   159  0D9D                     	;# 
   160  0D9E                     	;# 
   161  0D9F                     	;# 
   162  0DA0                     	;# 
   163  0DA1                     	;# 
   164  0DA1                     	;# 
   165  0DA2                     	;# 
   166  0DA3                     	;# 
   167  0DA3                     	;# 
   168  0DA4                     	;# 
   169  0DA5                     	;# 
   170  0DA5                     	;# 
   171  0DA6                     	;# 
   172  0DA7                     	;# 
   173  0DA7                     	;# 
   174  0DA8                     	;# 
   175  0DA9                     	;# 
   176  0DA9                     	;# 
   177  0DAA                     	;# 
   178  0DAB                     	;# 
   179  0DAC                     	;# 
   180  0DAC                     	;# 
   181  0DAD                     	;# 
   182  0DAD                     	;# 
   183  0DAE                     	;# 
   184  0DAF                     	;# 
   185  0DB0                     	;# 
   186  0DB1                     	;# 
   187  0DB1                     	;# 
   188  0DB2                     	;# 
   189  0DB3                     	;# 
   190  0DB3                     	;# 
   191  0DB4                     	;# 
   192  0DB5                     	;# 
   193  0DB5                     	;# 
   194  0DB6                     	;# 
   195  0DB7                     	;# 
   196  0DB7                     	;# 
   197  0DB8                     	;# 
   198  0DB9                     	;# 
   199  0DB9                     	;# 
   200  0DBA                     	;# 
   201  0DBB                     	;# 
   202  0DBC                     	;# 
   203  0DBC                     	;# 
   204  0DBD                     	;# 
   205  0DBD                     	;# 
   206  0DBE                     	;# 
   207  0DBF                     	;# 
   208  0DC0                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEA                     	;# 
   218  0FEB                     	;# 
   219  0FED                     	;# 
   220  0FEE                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  008C                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  009F                     	;# 
   264  010C                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011D                     	;# 
   273  011D                     	;# 
   274  018C                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0197                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019C                     	;# 
   289  019D                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  020C                     	;# 
   293  028C                     	;# 
   294  030C                     	;# 
   295  038C                     	;# 
   296  0391                     	;# 
   297  0392                     	;# 
   298  0393                     	;# 
   299  0691                     	;# 
   300  0692                     	;# 
   301  0693                     	;# 
   302  0694                     	;# 
   303  0695                     	;# 
   304  0D8E                     	;# 
   305  0D8F                     	;# 
   306  0D90                     	;# 
   307  0D91                     	;# 
   308  0D91                     	;# 
   309  0D92                     	;# 
   310  0D93                     	;# 
   311  0D93                     	;# 
   312  0D94                     	;# 
   313  0D95                     	;# 
   314  0D95                     	;# 
   315  0D96                     	;# 
   316  0D97                     	;# 
   317  0D97                     	;# 
   318  0D98                     	;# 
   319  0D99                     	;# 
   320  0D99                     	;# 
   321  0D9A                     	;# 
   322  0D9B                     	;# 
   323  0D9C                     	;# 
   324  0D9C                     	;# 
   325  0D9D                     	;# 
   326  0D9D                     	;# 
   327  0D9E                     	;# 
   328  0D9F                     	;# 
   329  0DA0                     	;# 
   330  0DA1                     	;# 
   331  0DA1                     	;# 
   332  0DA2                     	;# 
   333  0DA3                     	;# 
   334  0DA3                     	;# 
   335  0DA4                     	;# 
   336  0DA5                     	;# 
   337  0DA5                     	;# 
   338  0DA6                     	;# 
   339  0DA7                     	;# 
   340  0DA7                     	;# 
   341  0DA8                     	;# 
   342  0DA9                     	;# 
   343  0DA9                     	;# 
   344  0DAA                     	;# 
   345  0DAB                     	;# 
   346  0DAC                     	;# 
   347  0DAC                     	;# 
   348  0DAD                     	;# 
   349  0DAD                     	;# 
   350  0DAE                     	;# 
   351  0DAF                     	;# 
   352  0DB0                     	;# 
   353  0DB1                     	;# 
   354  0DB1                     	;# 
   355  0DB2                     	;# 
   356  0DB3                     	;# 
   357  0DB3                     	;# 
   358  0DB4                     	;# 
   359  0DB5                     	;# 
   360  0DB5                     	;# 
   361  0DB6                     	;# 
   362  0DB7                     	;# 
   363  0DB7                     	;# 
   364  0DB8                     	;# 
   365  0DB9                     	;# 
   366  0DB9                     	;# 
   367  0DBA                     	;# 
   368  0DBB                     	;# 
   369  0DBC                     	;# 
   370  0DBC                     	;# 
   371  0DBD                     	;# 
   372  0DBD                     	;# 
   373  0DBE                     	;# 
   374  0DBF                     	;# 
   375  0DC0                     	;# 
   376  0FE4                     	;# 
   377  0FE5                     	;# 
   378  0FE6                     	;# 
   379  0FE7                     	;# 
   380  0FE8                     	;# 
   381  0FE8                     	;# 
   382  0FE9                     	;# 
   383  0FEA                     	;# 
   384  0FEA                     	;# 
   385  0FEB                     	;# 
   386  0FED                     	;# 
   387  0FEE                     	;# 
   388  0FEE                     	;# 
   389  0FEF                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  008C                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  010C                     	;# 
   432  0111                     	;# 
   433  0112                     	;# 
   434  0115                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  0118                     	;# 
   438  0119                     	;# 
   439  011D                     	;# 
   440  011D                     	;# 
   441  018C                     	;# 
   442  0191                     	;# 
   443  0191                     	;# 
   444  0192                     	;# 
   445  0193                     	;# 
   446  0193                     	;# 
   447  0194                     	;# 
   448  0195                     	;# 
   449  0196                     	;# 
   450  0197                     	;# 
   451  0199                     	;# 
   452  019A                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019C                     	;# 
   456  019D                     	;# 
   457  019E                     	;# 
   458  019F                     	;# 
   459  020C                     	;# 
   460  028C                     	;# 
   461  030C                     	;# 
   462  038C                     	;# 
   463  0391                     	;# 
   464  0392                     	;# 
   465  0393                     	;# 
   466  0691                     	;# 
   467  0692                     	;# 
   468  0693                     	;# 
   469  0694                     	;# 
   470  0695                     	;# 
   471  0D8E                     	;# 
   472  0D8F                     	;# 
   473  0D90                     	;# 
   474  0D91                     	;# 
   475  0D91                     	;# 
   476  0D92                     	;# 
   477  0D93                     	;# 
   478  0D93                     	;# 
   479  0D94                     	;# 
   480  0D95                     	;# 
   481  0D95                     	;# 
   482  0D96                     	;# 
   483  0D97                     	;# 
   484  0D97                     	;# 
   485  0D98                     	;# 
   486  0D99                     	;# 
   487  0D99                     	;# 
   488  0D9A                     	;# 
   489  0D9B                     	;# 
   490  0D9C                     	;# 
   491  0D9C                     	;# 
   492  0D9D                     	;# 
   493  0D9D                     	;# 
   494  0D9E                     	;# 
   495  0D9F                     	;# 
   496  0DA0                     	;# 
   497  0DA1                     	;# 
   498  0DA1                     	;# 
   499  0DA2                     	;# 
   500  0DA3                     	;# 
   501  0DA3                     	;# 
   502  0DA4                     	;# 
   503  0DA5                     	;# 
   504  0DA5                     	;# 
   505  0DA6                     	;# 
   506  0DA7                     	;# 
   507  0DA7                     	;# 
   508  0DA8                     	;# 
   509  0DA9                     	;# 
   510  0DA9                     	;# 
   511  0DAA                     	;# 
   512  0DAB                     	;# 
   513  0DAC                     	;# 
   514  0DAC                     	;# 
   515  0DAD                     	;# 
   516  0DAD                     	;# 
   517  0DAE                     	;# 
   518  0DAF                     	;# 
   519  0DB0                     	;# 
   520  0DB1                     	;# 
   521  0DB1                     	;# 
   522  0DB2                     	;# 
   523  0DB3                     	;# 
   524  0DB3                     	;# 
   525  0DB4                     	;# 
   526  0DB5                     	;# 
   527  0DB5                     	;# 
   528  0DB6                     	;# 
   529  0DB7                     	;# 
   530  0DB7                     	;# 
   531  0DB8                     	;# 
   532  0DB9                     	;# 
   533  0DB9                     	;# 
   534  0DBA                     	;# 
   535  0DBB                     	;# 
   536  0DBC                     	;# 
   537  0DBC                     	;# 
   538  0DBD                     	;# 
   539  0DBD                     	;# 
   540  0DBE                     	;# 
   541  0DBF                     	;# 
   542  0DC0                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE8                     	;# 
   549  0FE9                     	;# 
   550  0FEA                     	;# 
   551  0FEA                     	;# 
   552  0FEB                     	;# 
   553  0FED                     	;# 
   554  0FEE                     	;# 
   555  0FEE                     	;# 
   556  0FEF                     	;# 
   557  0000                     	;# 
   558  0001                     	;# 
   559  0002                     	;# 
   560  0003                     	;# 
   561  0004                     	;# 
   562  0005                     	;# 
   563  0006                     	;# 
   564  0007                     	;# 
   565  0008                     	;# 
   566  0009                     	;# 
   567  000A                     	;# 
   568  000B                     	;# 
   569  000C                     	;# 
   570  0011                     	;# 
   571  0012                     	;# 
   572  0013                     	;# 
   573  0015                     	;# 
   574  0016                     	;# 
   575  0016                     	;# 
   576  0017                     	;# 
   577  0018                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001C                     	;# 
   582  008C                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0097                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  009F                     	;# 
   598  010C                     	;# 
   599  0111                     	;# 
   600  0112                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011D                     	;# 
   607  011D                     	;# 
   608  018C                     	;# 
   609  0191                     	;# 
   610  0191                     	;# 
   611  0192                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0194                     	;# 
   615  0195                     	;# 
   616  0196                     	;# 
   617  0197                     	;# 
   618  0199                     	;# 
   619  019A                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019C                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019F                     	;# 
   626  020C                     	;# 
   627  028C                     	;# 
   628  030C                     	;# 
   629  038C                     	;# 
   630  0391                     	;# 
   631  0392                     	;# 
   632  0393                     	;# 
   633  0691                     	;# 
   634  0692                     	;# 
   635  0693                     	;# 
   636  0694                     	;# 
   637  0695                     	;# 
   638  0D8E                     	;# 
   639  0D8F                     	;# 
   640  0D90                     	;# 
   641  0D91                     	;# 
   642  0D91                     	;# 
   643  0D92                     	;# 
   644  0D93                     	;# 
   645  0D93                     	;# 
   646  0D94                     	;# 
   647  0D95                     	;# 
   648  0D95                     	;# 
   649  0D96                     	;# 
   650  0D97                     	;# 
   651  0D97                     	;# 
   652  0D98                     	;# 
   653  0D99                     	;# 
   654  0D99                     	;# 
   655  0D9A                     	;# 
   656  0D9B                     	;# 
   657  0D9C                     	;# 
   658  0D9C                     	;# 
   659  0D9D                     	;# 
   660  0D9D                     	;# 
   661  0D9E                     	;# 
   662  0D9F                     	;# 
   663  0DA0                     	;# 
   664  0DA1                     	;# 
   665  0DA1                     	;# 
   666  0DA2                     	;# 
   667  0DA3                     	;# 
   668  0DA3                     	;# 
   669  0DA4                     	;# 
   670  0DA5                     	;# 
   671  0DA5                     	;# 
   672  0DA6                     	;# 
   673  0DA7                     	;# 
   674  0DA7                     	;# 
   675  0DA8                     	;# 
   676  0DA9                     	;# 
   677  0DA9                     	;# 
   678  0DAA                     	;# 
   679  0DAB                     	;# 
   680  0DAC                     	;# 
   681  0DAC                     	;# 
   682  0DAD                     	;# 
   683  0DAD                     	;# 
   684  0DAE                     	;# 
   685  0DAF                     	;# 
   686  0DB0                     	;# 
   687  0DB1                     	;# 
   688  0DB1                     	;# 
   689  0DB2                     	;# 
   690  0DB3                     	;# 
   691  0DB3                     	;# 
   692  0DB4                     	;# 
   693  0DB5                     	;# 
   694  0DB5                     	;# 
   695  0DB6                     	;# 
   696  0DB7                     	;# 
   697  0DB7                     	;# 
   698  0DB8                     	;# 
   699  0DB9                     	;# 
   700  0DB9                     	;# 
   701  0DBA                     	;# 
   702  0DBB                     	;# 
   703  0DBC                     	;# 
   704  0DBC                     	;# 
   705  0DBD                     	;# 
   706  0DBD                     	;# 
   707  0DBE                     	;# 
   708  0DBF                     	;# 
   709  0DC0                     	;# 
   710  0FE4                     	;# 
   711  0FE5                     	;# 
   712  0FE6                     	;# 
   713  0FE7                     	;# 
   714  0FE8                     	;# 
   715  0FE8                     	;# 
   716  0FE9                     	;# 
   717  0FEA                     	;# 
   718  0FEA                     	;# 
   719  0FEB                     	;# 
   720  0FED                     	;# 
   721  0FEE                     	;# 
   722  0FEE                     	;# 
   723  0FEF                     	;# 
   724  0000                     	;# 
   725  0001                     	;# 
   726  0002                     	;# 
   727  0003                     	;# 
   728  0004                     	;# 
   729  0005                     	;# 
   730  0006                     	;# 
   731  0007                     	;# 
   732  0008                     	;# 
   733  0009                     	;# 
   734  000A                     	;# 
   735  000B                     	;# 
   736  000C                     	;# 
   737  0011                     	;# 
   738  0012                     	;# 
   739  0013                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  008C                     	;# 
   750  0091                     	;# 
   751  0092                     	;# 
   752  0093                     	;# 
   753  0095                     	;# 
   754  0096                     	;# 
   755  0097                     	;# 
   756  0098                     	;# 
   757  0099                     	;# 
   758  009A                     	;# 
   759  009B                     	;# 
   760  009B                     	;# 
   761  009C                     	;# 
   762  009D                     	;# 
   763  009E                     	;# 
   764  009F                     	;# 
   765  010C                     	;# 
   766  0111                     	;# 
   767  0112                     	;# 
   768  0115                     	;# 
   769  0116                     	;# 
   770  0117                     	;# 
   771  0118                     	;# 
   772  0119                     	;# 
   773  011D                     	;# 
   774  011D                     	;# 
   775  018C                     	;# 
   776  0191                     	;# 
   777  0191                     	;# 
   778  0192                     	;# 
   779  0193                     	;# 
   780  0193                     	;# 
   781  0194                     	;# 
   782  0195                     	;# 
   783  0196                     	;# 
   784  0197                     	;# 
   785  0199                     	;# 
   786  019A                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020C                     	;# 
   794  028C                     	;# 
   795  030C                     	;# 
   796  038C                     	;# 
   797  0391                     	;# 
   798  0392                     	;# 
   799  0393                     	;# 
   800  0691                     	;# 
   801  0692                     	;# 
   802  0693                     	;# 
   803  0694                     	;# 
   804  0695                     	;# 
   805  0D8E                     	;# 
   806  0D8F                     	;# 
   807  0D90                     	;# 
   808  0D91                     	;# 
   809  0D91                     	;# 
   810  0D92                     	;# 
   811  0D93                     	;# 
   812  0D93                     	;# 
   813  0D94                     	;# 
   814  0D95                     	;# 
   815  0D95                     	;# 
   816  0D96                     	;# 
   817  0D97                     	;# 
   818  0D97                     	;# 
   819  0D98                     	;# 
   820  0D99                     	;# 
   821  0D99                     	;# 
   822  0D9A                     	;# 
   823  0D9B                     	;# 
   824  0D9C                     	;# 
   825  0D9C                     	;# 
   826  0D9D                     	;# 
   827  0D9D                     	;# 
   828  0D9E                     	;# 
   829  0D9F                     	;# 
   830  0DA0                     	;# 
   831  0DA1                     	;# 
   832  0DA1                     	;# 
   833  0DA2                     	;# 
   834  0DA3                     	;# 
   835  0DA3                     	;# 
   836  0DA4                     	;# 
   837  0DA5                     	;# 
   838  0DA5                     	;# 
   839  0DA6                     	;# 
   840  0DA7                     	;# 
   841  0DA7                     	;# 
   842  0DA8                     	;# 
   843  0DA9                     	;# 
   844  0DA9                     	;# 
   845  0DAA                     	;# 
   846  0DAB                     	;# 
   847  0DAC                     	;# 
   848  0DAC                     	;# 
   849  0DAD                     	;# 
   850  0DAD                     	;# 
   851  0DAE                     	;# 
   852  0DAF                     	;# 
   853  0DB0                     	;# 
   854  0DB1                     	;# 
   855  0DB1                     	;# 
   856  0DB2                     	;# 
   857  0DB3                     	;# 
   858  0DB3                     	;# 
   859  0DB4                     	;# 
   860  0DB5                     	;# 
   861  0DB5                     	;# 
   862  0DB6                     	;# 
   863  0DB7                     	;# 
   864  0DB7                     	;# 
   865  0DB8                     	;# 
   866  0DB9                     	;# 
   867  0DB9                     	;# 
   868  0DBA                     	;# 
   869  0DBB                     	;# 
   870  0DBC                     	;# 
   871  0DBC                     	;# 
   872  0DBD                     	;# 
   873  0DBD                     	;# 
   874  0DBE                     	;# 
   875  0DBF                     	;# 
   876  0DC0                     	;# 
   877  0FE4                     	;# 
   878  0FE5                     	;# 
   879  0FE6                     	;# 
   880  0FE7                     	;# 
   881  0FE8                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEA                     	;# 
   886  0FEB                     	;# 
   887  0FED                     	;# 
   888  0FEE                     	;# 
   889  0FEE                     	;# 
   890  0FEF                     	;# 
   891                           
   892                           	psect	stringtext
   893  0706                     __pstringtext:	
   894  0706                     _hexpowers:	
   895  0706  3401               	retlw	1
   896  0707  3400               	retlw	0
   897  0708  3410               	retlw	16
   898  0709  3400               	retlw	0
   899  070A  3400               	retlw	0
   900  070B  3401               	retlw	1
   901  070C  3400               	retlw	0
   902  070D  3410               	retlw	16
   903  070E                     __end_of_hexpowers:	
   904  0011                     _PIR1bits	set	17
   905  009D                     _ADCON0bits	set	157
   906  009C                     _ADRESH	set	156
   907  009B                     _ADRESL	set	155
   908  009F                     _ADCON2	set	159
   909  009E                     _ADCON1	set	158
   910  009D                     _ADCON0	set	157
   911  0097                     _WDTCON	set	151
   912  0098                     _OSCTUNE	set	152
   913  0099                     _OSCCON	set	153
   914  0095                     _OPTION_REGbits	set	149
   915  008C                     _TRISA	set	140
   916  011D                     _APFCON	set	285
   917  010C                     _LATA	set	268
   918  019A                     _TXREG	set	410
   919  0199                     _RCREG	set	409
   920  019D                     _RCSTAbits	set	413
   921  019C                     _SPBRGH	set	412
   922  019B                     _SPBRGL	set	411
   923  019E                     _TXSTA	set	414
   924  019D                     _RCSTA	set	413
   925  019F                     _BAUDCON	set	415
   926  018C                     _ANSELA	set	396
   927  020C                     _WPUA	set	524
   928  028C                     _ODCONA	set	652
   929  070E                     STR_3:	
   930  070E  3430               	retlw	48	;'0'
   931  070F  3431               	retlw	49	;'1'
   932  0710  3432               	retlw	50	;'2'
   933  0711  3433               	retlw	51	;'3'
   934  0712  3434               	retlw	52	;'4'
   935  0713  3435               	retlw	53	;'5'
   936  0714  3436               	retlw	54	;'6'
   937  0715  3437               	retlw	55	;'7'
   938  0716  3438               	retlw	56	;'8'
   939  0717  3439               	retlw	57	;'9'
   940  0718  3461               	retlw	97	;'a'
   941  0719  3462               	retlw	98	;'b'
   942  071A  3463               	retlw	99	;'c'
   943  071B  3464               	retlw	100	;'d'
   944  071C  3465               	retlw	101	;'e'
   945  071D  3466               	retlw	102	;'f'
   946  071E  3400               	retlw	0
   947  071F                     STR_1:	
   948  071F  3441               	retlw	65	;'A'
   949  0720  3475               	retlw	117	;'u'
   950  0721  3478               	retlw	120	;'x'
   951  0722  3420               	retlw	32	;' '
   952  0723  3452               	retlw	82	;'R'
   953  0724  3465               	retlw	101	;'e'
   954  0725  3461               	retlw	97	;'a'
   955  0726  3464               	retlw	100	;'d'
   956  0727  3479               	retlw	121	;'y'
   957  0728  342E               	retlw	46	;'.'
   958  0729  340A               	retlw	10
   959  072A  3400               	retlw	0
   960  072B                     STR_2:	
   961  072B  3441               	retlw	65	;'A'
   962  072C  3425               	retlw	37	;'%'
   963  072D  3478               	retlw	120	;'x'
   964  072E  340A               	retlw	10
   965  072F  3400               	retlw	0
   966                           
   967                           ; #config settings
   968  0000                     
   969                           	psect	cinit
   970  07FE                     start_initialization:	
   971  07FE                     __initialization:	
   972  07FE                     end_of_initialization:	
   973                           ;End of C runtime variable initialization code
   974                           
   975  07FE                     __end_of__initialization:	
   976  07FE  0020               	movlb	0
   977  07FF  2EE9               	ljmp	_main	;jump to C main() function
   978                           
   979                           	psect	cstackCOMMON
   980  0070                     __pcstackCOMMON:	
   981  0070                     ?_OSCILLATOR_Initialize:	
   982  0070                     ??_OSCILLATOR_Initialize:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ?_WDT_Initialize:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ??_WDT_Initialize:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ?_ADC1_Initialize:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ??_ADC1_Initialize:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ?_EUSART_Initialize:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ??_EUSART_Initialize:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_PIN_MANAGER_Initialize:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ??_PIN_MANAGER_Initialize:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_SYSTEM_Initialize:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ??_SYSTEM_Initialize:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_EUSART_Write:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ??_EUSART_Write:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?_putch:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_main:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?_ADC1_GetConversion:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ?___lwdiv:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033  0070                     EUSART_Write@txData:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036  0070                     ___lwdiv@divisor:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x0
  1041  0070                     	ds	1
  1042  0071                     ??_putch:	
  1043  0071                     putch@txData:	
  1044                           ; 1 bytes @ 0x1
  1045                           
  1046                           
  1047                           ; 1 bytes @ 0x1
  1048  0071                     	ds	1
  1049  0072                     ??_ADC1_GetConversion:	
  1050  0072                     ___lwdiv@dividend:	
  1051                           ; 1 bytes @ 0x2
  1052                           
  1053                           
  1054                           ; 2 bytes @ 0x2
  1055  0072                     	ds	1
  1056  0073                     ADC1_GetConversion@channel:	
  1057                           
  1058                           ; 1 bytes @ 0x3
  1059  0073                     	ds	1
  1060  0074                     ??___lwdiv:	
  1061                           
  1062                           ; 1 bytes @ 0x4
  1063  0074                     	ds	1
  1064  0075                     ___lwdiv@quotient:	
  1065                           
  1066                           ; 2 bytes @ 0x5
  1067  0075                     	ds	2
  1068  0077                     ___lwdiv@counter:	
  1069                           
  1070                           ; 1 bytes @ 0x7
  1071  0077                     	ds	1
  1072  0078                     ?_printf:	
  1073  0078                     printf@f:	
  1074                           ; 2 bytes @ 0x8
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x8
  1078  0078                     	ds	4
  1079  007C                     ??_main:	
  1080  007C                     main@res:	
  1081                           ; 1 bytes @ 0xC
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0xC
  1085  007C                     	ds	2
  1086                           
  1087                           	psect	cstackBANK0
  1088  0020                     __pcstackBANK0:	
  1089  0020                     ??_printf:	
  1090                           
  1091                           ; 1 bytes @ 0x0
  1092  0020                     	ds	4
  1093  0024                     printf@flag:	
  1094                           
  1095                           ; 1 bytes @ 0x4
  1096  0024                     	ds	1
  1097  0025                     printf@idx:	
  1098                           
  1099                           ; 1 bytes @ 0x5
  1100  0025                     	ds	1
  1101  0026                     printf@ap:	
  1102                           
  1103                           ; 1 bytes @ 0x6
  1104  0026                     	ds	1
  1105  0027                     printf@val:	
  1106                           
  1107                           ; 2 bytes @ 0x7
  1108  0027                     	ds	2
  1109  0029                     printf@prec:	
  1110                           
  1111                           ; 1 bytes @ 0x9
  1112  0029                     	ds	1
  1113  002A                     printf@c:	
  1114                           
  1115                           ; 1 bytes @ 0xA
  1116  002A                     	ds	1
  1117                           
  1118                           	psect	maintext
  1119  06E9                     __pmaintext:	
  1120 ;;
  1121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1122 ;;
  1123 ;; *************** function _main *****************
  1124 ;; Defined at:
  1125 ;;		line 3 in file "main.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  res             2   12[COMMON] unsigned int 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : B1F/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1139 ;;      Params:         0       0       0       0
  1140 ;;      Locals:         2       0       0       0
  1141 ;;      Temps:          0       0       0       0
  1142 ;;      Totals:         2       0       0       0
  1143 ;;Total ram usage:        2 bytes
  1144 ;; Hardware stack levels required when called:    3
  1145 ;; This function calls:
  1146 ;;		_ADC1_GetConversion
  1147 ;;		_SYSTEM_Initialize
  1148 ;;		_printf
  1149 ;; This function is called by:
  1150 ;;		Startup code after reset
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _main
  1156  06E9                     _main:	
  1157                           
  1158                           ;main.c: 4: SYSTEM_Initialize();
  1159                           
  1160                           ;incstack = 0
  1161                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1162  06E9  269B               	fcall	_SYSTEM_Initialize
  1163                           
  1164                           ;main.c: 6: _delay((unsigned long)((1)*(4000000/4000.0)));
  1165  06EA  30C8               	movlw	200
  1166  06EB                     u337:	
  1167  06EB  3200               	nop2
  1168  06EC  0B89               	decfsz	9,f
  1169  06ED  2EEB               	goto	u337
  1170                           
  1171                           ;main.c: 7: printf("Aux Ready.\n");
  1172  06EE  301F               	movlw	low (STR_1| (0+32768))
  1173  06EF  00F8               	movwf	printf@f
  1174  06F0  3087               	movlw	high (STR_1| (0+32768))
  1175  06F1  00F9               	movwf	printf@f+1
  1176  06F2                     L1:	
  1177  06F2  2764               	fcall	_printf
  1178                           
  1179                           ;main.c: 9: _delay((unsigned long)((1)*(4000000/4000.0)));
  1180                           
  1181                           ;main.c: 8: for(;;) {
  1182  06F3  30C8               	movlw	200
  1183  06F4                     u347:	
  1184  06F4  3200               	nop2
  1185  06F5  0B89               	decfsz	9,f
  1186  06F6  2EF4               	goto	u347
  1187                           
  1188                           ;main.c: 10: adc_result_t res = ADC1_GetConversion(channel_AN2);
  1189  06F7  3002               	movlw	2
  1190  06F8  26D1               	fcall	_ADC1_GetConversion
  1191  06F9  0871               	movf	?_ADC1_GetConversion+1,w
  1192  06FA  00FD               	movwf	main@res+1
  1193  06FB  0870               	movf	?_ADC1_GetConversion,w
  1194  06FC  00FC               	movwf	main@res
  1195                           
  1196                           ;main.c: 11: printf("A%x\n", res);
  1197  06FD  302B               	movlw	low (STR_2| (0+32768))
  1198  06FE  00F8               	movwf	printf@f
  1199  06FF  3087               	movlw	high (STR_2| (0+32768))
  1200  0700  00F9               	movwf	printf@f+1
  1201  0701  087D               	movf	main@res+1,w
  1202  0702  00FB               	movwf	?_printf+3
  1203  0703  087C               	movf	main@res,w
  1204  0704  00FA               	movwf	?_printf+2
  1205  0705  2EF2               	goto	L1
  1206  0706                     __end_of_main:	
  1207                           ;main.c: 12: }
  1208                           
  1209                           
  1210                           	psect	text1
  1211  0764                     __ptext1:	
  1212 ;; *************** function _printf *****************
  1213 ;; Defined at:
  1214 ;;		line 464 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  f               2    8[COMMON] PTR const unsigned char 
  1217 ;;		 -> STR_2(5), STR_1(12), 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  idx             1    5[BANK0 ] unsigned char 
  1220 ;;  tmpval          4    0        struct .
  1221 ;;  val             2    7[BANK0 ] unsigned int 
  1222 ;;  cp              2    0        PTR const unsigned char 
  1223 ;;  len             2    0        unsigned int 
  1224 ;;  c               1   10[BANK0 ] char 
  1225 ;;  prec            1    9[BANK0 ] char 
  1226 ;;  ap              1    6[BANK0 ] PTR void [1]
  1227 ;;		 -> ?_printf(2), 
  1228 ;;  flag            1    4[BANK0 ] unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  2    8[COMMON] int 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1238 ;;      Params:         4       0       0       0
  1239 ;;      Locals:         0       7       0       0
  1240 ;;      Temps:          0       4       0       0
  1241 ;;      Totals:         4      11       0       0
  1242 ;;Total ram usage:       15 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    2
  1245 ;; This function calls:
  1246 ;;		___lwdiv
  1247 ;;		_putch
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function _printf
  1255  0764                     _printf:	
  1256                           
  1257                           ;doprnt.c: 466: va_list ap;
  1258                           ;doprnt.c: 499: signed char c;
  1259                           ;doprnt.c: 506: signed char prec;
  1260                           ;doprnt.c: 508: unsigned char flag;
  1261                           ;doprnt.c: 523: union {
  1262                           ;doprnt.c: 524: unsigned long vd;
  1263                           ;doprnt.c: 525: double integ;
  1264                           ;doprnt.c: 526: } tmpval;
  1265                           ;doprnt.c: 528: unsigned int val;
  1266                           ;doprnt.c: 529: unsigned len;
  1267                           ;doprnt.c: 530: const char * cp;
  1268                           ;doprnt.c: 533: *ap = __va_start();
  1269                           
  1270                           ;incstack = 0
  1271                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1272  0764  307A               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1273  0765  0020               	movlb	0	; select bank0
  1274  0766  00A0               	movwf	??_printf
  1275  0767  0820               	movf	??_printf,w
  1276  0768  00A6               	movwf	printf@ap
  1277  0769                     l774:	
  1278                           ;doprnt.c: 536: while(c = *f++) {
  1279                           
  1280  0769  0879               	movf	printf@f+1,w
  1281  076A  0020               	movlb	0	; select bank0
  1282  076B  00A1               	movwf	??_printf+1
  1283  076C  0878               	movf	printf@f,w
  1284  076D  00A0               	movwf	??_printf
  1285  076E  0AF8               	incf	printf@f,f
  1286  076F  1903               	skipnz
  1287  0770  0AF9               	incf	printf@f+1,f
  1288  0771  0820               	movf	??_printf,w
  1289  0772  0084               	movwf	4
  1290  0773  0821               	movf	??_printf+1,w
  1291  0774  0085               	movwf	5
  1292  0775  0800               	movf	0,w	;code access
  1293  0776  00A2               	movwf	??_printf+2
  1294  0777  0822               	movf	??_printf+2,w
  1295  0778  00AA               	movwf	printf@c
  1296  0779  082A               	movf	printf@c,w
  1297  077A  1903               	btfsc	3,2
  1298  077B  0008               	return
  1299                           
  1300                           ;doprnt.c: 538: if(c != '%')
  1301  077C  3025               	movlw	37
  1302  077D  062A               	xorwf	printf@c,w
  1303  077E  1903               	btfsc	3,2
  1304  077F  2F83               	goto	l742
  1305                           
  1306                           ;doprnt.c: 540: {
  1307                           ;doprnt.c: 541: (putch(c) );
  1308  0780  082A               	movf	printf@c,w
  1309  0781  2692               	fcall	_putch
  1310                           
  1311                           ;doprnt.c: 542: continue;
  1312  0782  2F69               	goto	l774
  1313  0783                     l742:	
  1314                           
  1315                           ;doprnt.c: 543: }
  1316                           ;doprnt.c: 548: flag = 0;
  1317  0783  0020               	movlb	0	; select bank0
  1318  0784  01A4               	clrf	printf@flag
  1319                           
  1320                           ;doprnt.c: 822: }
  1321                           
  1322                           ;doprnt.c: 813: continue;
  1323                           
  1324                           ;doprnt.c: 802: default:
  1325                           
  1326                           ;doprnt.c: 723: break;
  1327                           
  1328                           ;doprnt.c: 718: case 'x':
  1329                           
  1330                           ;doprnt.c: 638: goto alldone;
  1331                           
  1332                           ;doprnt.c: 637: case 0:
  1333                           
  1334                           ;doprnt.c: 635: switch(c = *f++) {
  1335  0785  0879               	movf	printf@f+1,w
  1336  0786  00A1               	movwf	??_printf+1
  1337  0787  0878               	movf	printf@f,w
  1338  0788  00A0               	movwf	??_printf
  1339  0789  0AF8               	incf	printf@f,f
  1340  078A  1903               	skipnz
  1341  078B  0AF9               	incf	printf@f+1,f
  1342  078C  0820               	movf	??_printf,w
  1343  078D  0084               	movwf	4
  1344  078E  0821               	movf	??_printf+1,w
  1345  078F  0085               	movwf	5
  1346  0790  0800               	movf	0,w	;code access
  1347  0791  00AA               	movwf	printf@c
  1348                           
  1349                           ; Switch size 1, requested type "space"
  1350                           ; Number of cases is 2, Range of values is 0 to 120
  1351                           ; switch strategies available:
  1352                           ; Name         Instructions Cycles
  1353                           ; simple_byte            7     4 (average)
  1354                           ; direct_byte          248     6 (fixed)
  1355                           ; jumptable            260     6 (fixed)
  1356                           ;	Chosen strategy is simple_byte
  1357  0792  3A00               	xorlw	0	; case 0
  1358  0793  1903               	skipnz
  1359  0794  2FFD               	goto	l160
  1360  0795  3A78               	xorlw	120	; case 120
  1361  0796  1903               	skipnz
  1362  0797  2F99               	goto	l748
  1363  0798  2F69               	goto	l774
  1364  0799                     l748:	
  1365                           
  1366                           ;doprnt.c: 1273: {
  1367                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1368  0799  0826               	movf	printf@ap,w
  1369  079A  0086               	movwf	6
  1370  079B  0187               	clrf	7
  1371  079C  3F40               	moviw [0]fsr1
  1372  079D  00A7               	movwf	printf@val
  1373  079E  3F41               	moviw [1]fsr1
  1374  079F  00A8               	movwf	printf@val+1
  1375  07A0  3002               	movlw	2
  1376  07A1  00A0               	movwf	??_printf
  1377  07A2  0820               	movf	??_printf,w
  1378  07A3  07A6               	addwf	printf@ap,f
  1379                           
  1380                           ;doprnt.c: 1287: }
  1381                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1382  07A4  01AA               	clrf	printf@c
  1383  07A5  0AAA               	incf	printf@c,f
  1384  07A6  3004               	movlw	4
  1385  07A7  062A               	xorwf	printf@c,w
  1386  07A8  1903               	btfsc	3,2
  1387  07A9  2FC9               	goto	l764
  1388  07AA                     l758:	
  1389                           
  1390                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1391  07AA  082A               	movf	printf@c,w
  1392  07AB  00A0               	movwf	??_printf
  1393  07AC  01A1               	clrf	??_printf+1
  1394  07AD  35A0               	lslf	??_printf,f
  1395  07AE  0DA1               	rlf	??_printf+1,f
  1396  07AF  3006               	movlw	low (_hexpowers| (0+32768))
  1397  07B0  0720               	addwf	??_printf,w
  1398  07B1  0084               	movwf	4
  1399  07B2  3087               	movlw	high (_hexpowers| (0+32768))
  1400  07B3  3D21               	addwfc	??_printf+1,w
  1401  07B4  0085               	movwf	5
  1402  07B5  3F00               	moviw [0]fsr0
  1403  07B6  00A2               	movwf	??_printf+2
  1404  07B7  3F01               	moviw [1]fsr0
  1405  07B8  00A3               	movwf	??_printf+3
  1406  07B9  0823               	movf	??_printf+3,w
  1407  07BA  0228               	subwf	printf@val+1,w
  1408  07BB  1D03               	skipz
  1409  07BC  2FBF               	goto	u295
  1410  07BD  0822               	movf	??_printf+2,w
  1411  07BE  0227               	subwf	printf@val,w
  1412  07BF                     u295:	
  1413  07BF  1C03               	btfss	3,0
  1414  07C0  2FC9               	goto	l764
  1415                           
  1416                           ;doprnt.c: 1318: break;
  1417  07C1  3001               	movlw	1
  1418  07C2  00A0               	movwf	??_printf
  1419  07C3  0820               	movf	??_printf,w
  1420  07C4  07AA               	addwf	printf@c,f
  1421  07C5  3004               	movlw	4
  1422  07C6  062A               	xorwf	printf@c,w
  1423  07C7  1D03               	btfss	3,2
  1424  07C8  2FAA               	goto	l758
  1425  07C9                     l764:	
  1426                           
  1427                           ;doprnt.c: 1422: {
  1428                           ;doprnt.c: 1469: }
  1429                           ;doprnt.c: 1472: prec = c;
  1430  07C9  082A               	movf	printf@c,w
  1431  07CA  00A0               	movwf	??_printf
  1432  07CB  0820               	movf	??_printf,w
  1433  07CC  00A9               	movwf	printf@prec
  1434  07CD                     l772:	
  1435                           ;doprnt.c: 1474: while(prec--) {
  1436                           
  1437  07CD  30FF               	movlw	255
  1438  07CE  0020               	movlb	0	; select bank0
  1439  07CF  00A0               	movwf	??_printf
  1440  07D0  0820               	movf	??_printf,w
  1441  07D1  07A9               	addwf	printf@prec,f
  1442  07D2  0A29               	incf	printf@prec,w
  1443  07D3  1903               	btfsc	3,2
  1444  07D4  2F69               	goto	l774
  1445                           
  1446                           ;doprnt.c: 1478: {
  1447                           ;doprnt.c: 1499: {
  1448                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1449  07D5  0829               	movf	printf@prec,w
  1450  07D6  00A0               	movwf	??_printf
  1451  07D7  01A1               	clrf	??_printf+1
  1452  07D8  35A0               	lslf	??_printf,f
  1453  07D9  0DA1               	rlf	??_printf+1,f
  1454  07DA  3006               	movlw	low (_hexpowers| (0+32768))
  1455  07DB  0720               	addwf	??_printf,w
  1456  07DC  0084               	movwf	4
  1457  07DD  3087               	movlw	high (_hexpowers| (0+32768))
  1458  07DE  3D21               	addwfc	??_printf+1,w
  1459  07DF  0085               	movwf	5
  1460  07E0  3F00               	moviw [0]fsr0
  1461  07E1  00F0               	movwf	___lwdiv@divisor
  1462  07E2  3F01               	moviw [1]fsr0
  1463  07E3  00F1               	movwf	___lwdiv@divisor+1
  1464  07E4  0828               	movf	printf@val+1,w
  1465  07E5  00F3               	movwf	___lwdiv@dividend+1
  1466  07E6  0827               	movf	printf@val,w
  1467  07E7  00F2               	movwf	___lwdiv@dividend
  1468  07E8  2730               	fcall	___lwdiv
  1469  07E9  0870               	movf	?___lwdiv,w
  1470  07EA  390F               	andlw	15
  1471  07EB  0020               	movlb	0	; select bank0
  1472  07EC  00A2               	movwf	??_printf+2
  1473  07ED  0822               	movf	??_printf+2,w
  1474  07EE  00A5               	movwf	printf@idx
  1475                           
  1476                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1477  07EF  0825               	movf	printf@idx,w
  1478  07F0  3E0E               	addlw	low (STR_3| (0+32768))
  1479  07F1  0084               	movwf	4
  1480  07F2  3087               	movlw	high (STR_3| (0+32768))
  1481  07F3  1803               	skipnc
  1482  07F4  3E01               	addlw	1
  1483  07F5  0085               	movwf	5
  1484  07F6  0800               	movf	0,w	;code access
  1485  07F7  00A0               	movwf	??_printf
  1486  07F8  0820               	movf	??_printf,w
  1487  07F9  00AA               	movwf	printf@c
  1488                           
  1489                           ;doprnt.c: 1508: }
  1490                           ;doprnt.c: 1523: }
  1491                           ;doprnt.c: 1524: (putch(c) );
  1492  07FA  082A               	movf	printf@c,w
  1493  07FB  2692               	fcall	_putch
  1494  07FC  2FCD               	goto	l772
  1495  07FD                     l160:	
  1496                           ;doprnt.c: 1540: return 0;
  1497                           ;	Return value of _printf is never used
  1498                           
  1499                           ;doprnt.c: 1525: }
  1500                           ;doprnt.c: 1533: }
  1501                           ;doprnt.c: 1535: alldone:
  1502                           
  1503  07FD  0008               	return
  1504  07FE                     __end_of_printf:	
  1505                           
  1506                           	psect	text2
  1507  0692                     __ptext2:	
  1508 ;; *************** function _putch *****************
  1509 ;; Defined at:
  1510 ;;		line 111 in file "mcc_generated_files/eusart.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  txData          1    wreg     unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  txData          1    1[COMMON] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1524 ;;      Params:         0       0       0       0
  1525 ;;      Locals:         1       0       0       0
  1526 ;;      Temps:          0       0       0       0
  1527 ;;      Totals:         1       0       0       0
  1528 ;;Total ram usage:        1 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    1
  1531 ;; This function calls:
  1532 ;;		_EUSART_Write
  1533 ;; This function is called by:
  1534 ;;		_printf
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function _putch
  1540  0692                     _putch:	
  1541                           
  1542                           ;incstack = 0
  1543                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1544                           ;putch@txData stored from wreg
  1545  0692  00F1               	movwf	putch@txData
  1546                           
  1547                           ;eusart.c: 113: EUSART_Write(txData);
  1548  0693  0871               	movf	putch@txData,w
  1549  0694  26A1               	fcall	_EUSART_Write
  1550  0695  0008               	return
  1551  0696                     __end_of_putch:	
  1552                           
  1553                           	psect	text3
  1554  06A1                     __ptext3:	
  1555 ;; *************** function _EUSART_Write *****************
  1556 ;; Defined at:
  1557 ;;		line 97 in file "mcc_generated_files/eusart.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  txData          1    wreg     unsigned char 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  txData          1    0[COMMON] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1571 ;;      Params:         0       0       0       0
  1572 ;;      Locals:         1       0       0       0
  1573 ;;      Temps:          0       0       0       0
  1574 ;;      Totals:         1       0       0       0
  1575 ;;Total ram usage:        1 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_putch
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function _EUSART_Write
  1586  06A1                     _EUSART_Write:	
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _EUSART_Write: [wreg]
  1590                           ;EUSART_Write@txData stored from wreg
  1591  06A1  00F0               	movwf	EUSART_Write@txData
  1592  06A2                     l76:	
  1593                           ;eusart.c: 100: {
  1594                           
  1595                           ;eusart.c: 99: while(0 == PIR1bits.TXIF)
  1596                           
  1597  06A2  0020               	movlb	0	; select bank0
  1598  06A3  1E11               	btfss	17,4	;volatile
  1599  06A4  2EA2               	goto	l76
  1600                           
  1601                           ;eusart.c: 101: }
  1602                           ;eusart.c: 103: TXREG = txData;
  1603  06A5  0870               	movf	EUSART_Write@txData,w
  1604  06A6  0023               	movlb	3	; select bank3
  1605  06A7  009A               	movwf	26	;volatile
  1606  06A8  0008               	return
  1607  06A9                     __end_of_EUSART_Write:	
  1608                           
  1609                           	psect	text4
  1610  0730                     __ptext4:	
  1611 ;; *************** function ___lwdiv *****************
  1612 ;; Defined at:
  1613 ;;		line 6 in file "/Applications/microchip/xc8/v1.41/sources/common/lwdiv.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  divisor         2    0[COMMON] unsigned int 
  1616 ;;  dividend        2    2[COMMON] unsigned int 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  quotient        2    5[COMMON] unsigned int 
  1619 ;;  counter         1    7[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2    0[COMMON] unsigned int 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1629 ;;      Params:         4       0       0       0
  1630 ;;      Locals:         3       0       0       0
  1631 ;;      Temps:          1       0       0       0
  1632 ;;      Totals:         8       0       0       0
  1633 ;;Total ram usage:        8 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_printf
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function ___lwdiv
  1644  0730                     ___lwdiv:	
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1648  0730  01F5               	clrf	___lwdiv@quotient
  1649  0731  01F6               	clrf	___lwdiv@quotient+1
  1650  0732  0870               	movf	___lwdiv@divisor,w
  1651  0733  0471               	iorwf	___lwdiv@divisor+1,w
  1652  0734  1903               	btfsc	3,2
  1653  0735  2F5F               	goto	l720
  1654  0736  01F7               	clrf	___lwdiv@counter
  1655  0737  0AF7               	incf	___lwdiv@counter,f
  1656  0738                     l708:	
  1657  0738  1BF1               	btfsc	___lwdiv@divisor+1,7
  1658  0739  2F44               	goto	l710
  1659  073A  3001               	movlw	1
  1660  073B                     u205:	
  1661  073B  35F0               	lslf	___lwdiv@divisor,f
  1662  073C  0DF1               	rlf	___lwdiv@divisor+1,f
  1663  073D  0B89               	decfsz	9,f
  1664  073E  2F3B               	goto	u205
  1665  073F  3001               	movlw	1
  1666  0740  00F4               	movwf	??___lwdiv
  1667  0741  0874               	movf	??___lwdiv,w
  1668  0742  07F7               	addwf	___lwdiv@counter,f
  1669  0743  2F38               	goto	l708
  1670  0744                     l710:	
  1671  0744  3001               	movlw	1
  1672  0745                     u225:	
  1673  0745  35F5               	lslf	___lwdiv@quotient,f
  1674  0746  0DF6               	rlf	___lwdiv@quotient+1,f
  1675  0747  0B89               	decfsz	9,f
  1676  0748  2F45               	goto	u225
  1677  0749  0871               	movf	___lwdiv@divisor+1,w
  1678  074A  0273               	subwf	___lwdiv@dividend+1,w
  1679  074B  1D03               	skipz
  1680  074C  2F4F               	goto	u235
  1681  074D  0870               	movf	___lwdiv@divisor,w
  1682  074E  0272               	subwf	___lwdiv@dividend,w
  1683  074F                     u235:	
  1684  074F  1C03               	skipc
  1685  0750  2F56               	goto	l716
  1686  0751  0870               	movf	___lwdiv@divisor,w
  1687  0752  02F2               	subwf	___lwdiv@dividend,f
  1688  0753  0871               	movf	___lwdiv@divisor+1,w
  1689  0754  3BF3               	subwfb	___lwdiv@dividend+1,f
  1690  0755  1475               	bsf	___lwdiv@quotient,0
  1691  0756                     l716:	
  1692  0756  3001               	movlw	1
  1693  0757                     u245:	
  1694  0757  36F1               	lsrf	___lwdiv@divisor+1,f
  1695  0758  0CF0               	rrf	___lwdiv@divisor,f
  1696  0759  0B89               	decfsz	9,f
  1697  075A  2F57               	goto	u245
  1698  075B  3001               	movlw	1
  1699  075C  02F7               	subwf	___lwdiv@counter,f
  1700  075D  1D03               	btfss	3,2
  1701  075E  2F44               	goto	l710
  1702  075F                     l720:	
  1703  075F  0876               	movf	___lwdiv@quotient+1,w
  1704  0760  00F1               	movwf	?___lwdiv+1
  1705  0761  0875               	movf	___lwdiv@quotient,w
  1706  0762  00F0               	movwf	?___lwdiv
  1707  0763  0008               	return
  1708  0764                     __end_of___lwdiv:	
  1709                           
  1710                           	psect	text5
  1711  069B                     __ptext5:	
  1712 ;; *************** function _SYSTEM_Initialize *****************
  1713 ;; Defined at:
  1714 ;;		line 67 in file "mcc_generated_files/mcc.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1728 ;;      Params:         0       0       0       0
  1729 ;;      Locals:         0       0       0       0
  1730 ;;      Temps:          0       0       0       0
  1731 ;;      Totals:         0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    1
  1735 ;; This function calls:
  1736 ;;		_ADC1_Initialize
  1737 ;;		_EUSART_Initialize
  1738 ;;		_OSCILLATOR_Initialize
  1739 ;;		_PIN_MANAGER_Initialize
  1740 ;;		_WDT_Initialize
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _SYSTEM_Initialize
  1748  069B                     _SYSTEM_Initialize:	
  1749                           
  1750                           ;mcc.c: 70: PIN_MANAGER_Initialize();
  1751                           
  1752                           ;incstack = 0
  1753                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1754  069B  26BD               	fcall	_PIN_MANAGER_Initialize
  1755                           
  1756                           ;mcc.c: 71: OSCILLATOR_Initialize();
  1757  069C  2696               	fcall	_OSCILLATOR_Initialize
  1758                           
  1759                           ;mcc.c: 72: WDT_Initialize();
  1760  069D  268E               	fcall	_WDT_Initialize
  1761                           
  1762                           ;mcc.c: 73: ADC1_Initialize();
  1763  069E  26A9               	fcall	_ADC1_Initialize
  1764                           
  1765                           ;mcc.c: 74: EUSART_Initialize();
  1766  069F  26B2               	fcall	_EUSART_Initialize
  1767  06A0  0008               	return
  1768  06A1                     __end_of_SYSTEM_Initialize:	
  1769                           
  1770                           	psect	text6
  1771  068E                     __ptext6:	
  1772 ;; *************** function _WDT_Initialize *****************
  1773 ;; Defined at:
  1774 ;;		line 85 in file "mcc_generated_files/mcc.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1788 ;;      Params:         0       0       0       0
  1789 ;;      Locals:         0       0       0       0
  1790 ;;      Temps:          0       0       0       0
  1791 ;;      Totals:         0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_SYSTEM_Initialize
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _WDT_Initialize
  1803  068E                     _WDT_Initialize:	
  1804                           
  1805                           ;mcc.c: 88: WDTCON = 0x16;
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _WDT_Initialize: [wreg]
  1809  068E  3016               	movlw	22
  1810  068F  0021               	movlb	1	; select bank1
  1811  0690  0097               	movwf	23	;volatile
  1812  0691  0008               	return
  1813  0692                     __end_of_WDT_Initialize:	
  1814                           
  1815                           	psect	text7
  1816  06BD                     __ptext7:	
  1817 ;; *************** function _PIN_MANAGER_Initialize *****************
  1818 ;; Defined at:
  1819 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1833 ;;      Params:         0       0       0       0
  1834 ;;      Locals:         0       0       0       0
  1835 ;;      Temps:          0       0       0       0
  1836 ;;      Totals:         0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_SYSTEM_Initialize
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _PIN_MANAGER_Initialize
  1848  06BD                     _PIN_MANAGER_Initialize:	
  1849                           
  1850                           ;pin_manager.c: 57: LATA = 0x04;
  1851                           
  1852                           ;incstack = 0
  1853                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1854  06BD  3004               	movlw	4
  1855  06BE  0022               	movlb	2	; select bank2
  1856  06BF  008C               	movwf	12	;volatile
  1857                           
  1858                           ;pin_manager.c: 62: TRISA = 0x3F;
  1859  06C0  303F               	movlw	63
  1860  06C1  0021               	movlb	1	; select bank1
  1861  06C2  008C               	movwf	12	;volatile
  1862                           
  1863                           ;pin_manager.c: 67: ANSELA = 0x07;
  1864  06C3  3007               	movlw	7
  1865  06C4  0023               	movlb	3	; select bank3
  1866  06C5  008C               	movwf	12	;volatile
  1867                           
  1868                           ;pin_manager.c: 72: WPUA = 0x3F;
  1869  06C6  303F               	movlw	63
  1870  06C7  0024               	movlb	4	; select bank4
  1871  06C8  008C               	movwf	12	;volatile
  1872                           
  1873                           ;pin_manager.c: 73: OPTION_REGbits.nWPUEN = 0;
  1874  06C9  0021               	movlb	1	; select bank1
  1875  06CA  1395               	bcf	21,7	;volatile
  1876                           
  1877                           ;pin_manager.c: 78: ODCONA = 0x00;
  1878  06CB  0025               	movlb	5	; select bank5
  1879  06CC  018C               	clrf	12	;volatile
  1880                           
  1881                           ;pin_manager.c: 83: APFCON = 0x84;
  1882  06CD  3084               	movlw	132
  1883  06CE  0022               	movlb	2	; select bank2
  1884  06CF  009D               	movwf	29	;volatile
  1885  06D0  0008               	return
  1886  06D1                     __end_of_PIN_MANAGER_Initialize:	
  1887                           
  1888                           	psect	text8
  1889  0696                     __ptext8:	
  1890 ;; *************** function _OSCILLATOR_Initialize *****************
  1891 ;; Defined at:
  1892 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1906 ;;      Params:         0       0       0       0
  1907 ;;      Locals:         0       0       0       0
  1908 ;;      Temps:          0       0       0       0
  1909 ;;      Totals:         0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_SYSTEM_Initialize
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _OSCILLATOR_Initialize
  1921  0696                     _OSCILLATOR_Initialize:	
  1922                           
  1923                           ;mcc.c: 80: OSCCON = 0x68;
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1927  0696  3068               	movlw	104
  1928  0697  0021               	movlb	1	; select bank1
  1929  0698  0099               	movwf	25	;volatile
  1930                           
  1931                           ;mcc.c: 82: OSCTUNE = 0x00;
  1932  0699  0198               	clrf	24	;volatile
  1933  069A  0008               	return
  1934  069B                     __end_of_OSCILLATOR_Initialize:	
  1935                           
  1936                           	psect	text9
  1937  06B2                     __ptext9:	
  1938 ;; *************** function _EUSART_Initialize *****************
  1939 ;; Defined at:
  1940 ;;		line 55 in file "mcc_generated_files/eusart.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1954 ;;      Params:         0       0       0       0
  1955 ;;      Locals:         0       0       0       0
  1956 ;;      Temps:          0       0       0       0
  1957 ;;      Totals:         0       0       0       0
  1958 ;;Total ram usage:        0 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_SYSTEM_Initialize
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _EUSART_Initialize
  1969  06B2                     _EUSART_Initialize:	
  1970                           
  1971                           ;eusart.c: 60: BAUDCON = 0x08;
  1972                           
  1973                           ;incstack = 0
  1974                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  1975  06B2  3008               	movlw	8
  1976  06B3  0023               	movlb	3	; select bank3
  1977  06B4  009F               	movwf	31	;volatile
  1978                           
  1979                           ;eusart.c: 63: RCSTA = 0x80;
  1980  06B5  3080               	movlw	128
  1981  06B6  009D               	movwf	29	;volatile
  1982                           
  1983                           ;eusart.c: 66: TXSTA = 0x24;
  1984  06B7  3024               	movlw	36
  1985  06B8  009E               	movwf	30	;volatile
  1986                           
  1987                           ;eusart.c: 69: SPBRGL = 0x67;
  1988  06B9  3067               	movlw	103
  1989  06BA  009B               	movwf	27	;volatile
  1990                           
  1991                           ;eusart.c: 72: SPBRGH = 0x00;
  1992  06BB  019C               	clrf	28	;volatile
  1993  06BC  0008               	return
  1994  06BD                     __end_of_EUSART_Initialize:	
  1995                           
  1996                           	psect	text10
  1997  06A9                     __ptext10:	
  1998 ;; *************** function _ADC1_Initialize *****************
  1999 ;; Defined at:
  2000 ;;		line 64 in file "mcc_generated_files/adc1.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2014 ;;      Params:         0       0       0       0
  2015 ;;      Locals:         0       0       0       0
  2016 ;;      Temps:          0       0       0       0
  2017 ;;      Totals:         0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_SYSTEM_Initialize
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _ADC1_Initialize
  2029  06A9                     _ADC1_Initialize:	
  2030                           
  2031                           ;adc1.c: 69: ADCON0 = 0x01;
  2032                           
  2033                           ;incstack = 0
  2034                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  2035  06A9  3001               	movlw	1
  2036  06AA  0021               	movlb	1	; select bank1
  2037  06AB  009D               	movwf	29	;volatile
  2038                           
  2039                           ;adc1.c: 72: ADCON1 = 0xC0;
  2040  06AC  30C0               	movlw	192
  2041  06AD  009E               	movwf	30	;volatile
  2042                           
  2043                           ;adc1.c: 75: ADCON2 = 0x00;
  2044  06AE  019F               	clrf	31	;volatile
  2045                           
  2046                           ;adc1.c: 78: ADRESL = 0x00;
  2047  06AF  019B               	clrf	27	;volatile
  2048                           
  2049                           ;adc1.c: 81: ADRESH = 0x00;
  2050  06B0  019C               	clrf	28	;volatile
  2051  06B1  0008               	return
  2052  06B2                     __end_of_ADC1_Initialize:	
  2053                           
  2054                           	psect	text11
  2055  06D1                     __ptext11:	
  2056 ;; *************** function _ADC1_GetConversion *****************
  2057 ;; Defined at:
  2058 ;;		line 112 in file "mcc_generated_files/adc1.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  channel         1    wreg     enum E3526
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  channel         1    3[COMMON] enum E3526
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  2    0[COMMON] unsigned int 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2072 ;;      Params:         2       0       0       0
  2073 ;;      Locals:         1       0       0       0
  2074 ;;      Temps:          1       0       0       0
  2075 ;;      Totals:         4       0       0       0
  2076 ;;Total ram usage:        4 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _ADC1_GetConversion
  2087  06D1                     _ADC1_GetConversion:	
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _ADC1_GetConversion: [wreg+status,2+status,0]
  2091                           ;ADC1_GetConversion@channel stored from wreg
  2092  06D1  00F3               	movwf	ADC1_GetConversion@channel
  2093                           
  2094                           ;adc1.c: 115: ADCON0bits.CHS = channel;
  2095  06D2  0873               	movf	ADC1_GetConversion@channel,w
  2096  06D3  00F2               	movwf	??_ADC1_GetConversion
  2097  06D4  0DF2               	rlf	??_ADC1_GetConversion,f
  2098  06D5  0DF2               	rlf	??_ADC1_GetConversion,f
  2099  06D6  0021               	movlb	1	; select bank1
  2100  06D7  081D               	movf	29,w	;volatile
  2101  06D8  0672               	xorwf	??_ADC1_GetConversion,w
  2102  06D9  3983               	andlw	-125
  2103  06DA  0672               	xorwf	??_ADC1_GetConversion,w
  2104  06DB  009D               	movwf	29	;volatile
  2105                           
  2106                           ;adc1.c: 118: ADCON0bits.ADON = 1;
  2107  06DC  141D               	bsf	29,0	;volatile
  2108                           
  2109                           ;adc1.c: 120: _delay((unsigned long)((5)*(4000000/4000000.0)));
  2110  06DD  3200               	nop2	;2 cycle nop
  2111  06DE  3200               	nop2	;2 cycle nop
  2112  06DF  0000               	nop
  2113                           
  2114                           ;adc1.c: 123: ADCON0bits.GO_nDONE = 1;
  2115  06E0  0021               	movlb	1	; select bank1
  2116  06E1  149D               	bsf	29,1	;volatile
  2117  06E2                     l117:	
  2118                           ;adc1.c: 127: {
  2119                           
  2120                           ;adc1.c: 126: while (ADCON0bits.GO_nDONE)
  2121                           
  2122  06E2  189D               	btfsc	29,1	;volatile
  2123  06E3  2EE2               	goto	l117
  2124                           
  2125                           ;adc1.c: 128: }
  2126                           ;adc1.c: 131: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2127  06E4  081C               	movf	28,w	;volatile
  2128  06E5  00F1               	movwf	?_ADC1_GetConversion+1
  2129  06E6  081B               	movf	27,w	;volatile
  2130  06E7  00F0               	movwf	?_ADC1_GetConversion
  2131  06E8  0008               	return
  2132  06E9                     __end_of_ADC1_GetConversion:	
  2133  007E                     btemp	set	126	;btemp
  2134  007E                     wtemp0	set	126


Data Sizes:
    Strings     34
    Constant    8
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      11
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[5]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->___lwdiv
    _putch->_EUSART_Write

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     848
                                             12 COMMON     2     2      0
                 _ADC1_GetConversion
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              23    19      4     803
                                              8 COMMON     4     0      4
                                              0 BANK0     11    11      0
                            ___lwdiv
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADC1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1_GetConversion
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     ___lwdiv
     _putch
       _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B       B       6       13.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Aug 31 17:53:09 2017

                    __CFG_CP$OFF 0000                               l76 06A2       __end_of_ADC1_GetConversion 06E9  
                    __CFG_LVP$ON 0000                              l117 06E2                              l160 07FD  
                            l710 0744                              l720 075F                              l716 0756  
                            l708 0738                              l742 0783                              l772 07CD  
                            l764 07C9                              l748 0799                              l758 07AA  
                            l774 0769                              u205 073B                              u225 0745  
                            u235 074F                              u245 0757                              u337 06EB  
                            u347 06F4                              u295 07BF                     __CFG_BORV$LO 0000  
                            wreg 0009                             STR_1 071F                             STR_2 072B  
                           STR_3 070E                             _LATA 010C                             _WPUA 020C  
                   __CFG_WRT$OFF 0000                             _main 06E9                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 0001                    __CFG_MCLRE$ON 0000                    ?_EUSART_Write 0070  
 __size_of_OSCILLATOR_Initialize 0005    __end_of_OSCILLATOR_Initialize 069B                            ?_main 0070  
                  __CFG_WDTE$OFF 0000                  __end_of___lwdiv 0764                            _RCREG 0199  
                          _RCSTA 019D                            _TRISA 008C                            _TXREG 019A  
                          _TXSTA 019E                   _WDT_Initialize 068E                            _putch 0692  
                          status 0003                            wtemp0 007E                  __initialization 07FE  
                   __end_of_main 0706                   ??_EUSART_Write 0070                           ??_main 007C  
                 __CFG_PLLEN$OFF 0000           __end_of_WDT_Initialize 0692                           _ADCON0 009D  
                         _ADCON1 009E                           _ADCON2 009F                           _ADRESH 009C  
                         _ADRESL 009B                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ODCONA 028C                           _OSCCON 0099  
                         _SPBRGH 019C                           _SPBRGL 019B                           _WDTCON 0097  
                 __CFG_PWRTE$OFF 0000                   __CFG_STVREN$ON 0000                        ??___lwdiv 0074  
                         _printf 0764         __size_of_ADC1_Initialize 0009                  ?_WDT_Initialize 0070  
              _SYSTEM_Initialize 069B          __end_of__initialization 07FE               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0070                    __end_of_putch 0696  
                 _OPTION_REGbits 0095        __end_of_SYSTEM_Initialize 06A1                          ??_putch 0071  
             _ADC1_GetConversion 06D1             __end_of_EUSART_Write 06A9              ?_ADC1_GetConversion 0070  
                     __pmaintext 06E9                          _BAUDCON 019F                          ?_printf 0078  
           ??_ADC1_GetConversion 0072                          _OSCTUNE 0098                ??_ADC1_Initialize 0070  
                        ___lwdiv 0730                          __ptext1 0764                          __ptext2 0692  
                        __ptext3 06A1                          __ptext4 0730                          __ptext5 069B  
                        __ptext6 068E                          __ptext7 06BD                          __ptext8 0696  
                        __ptext9 06B2                  __size_of_printf 009A                __end_of_hexpowers 070E  
          _OSCILLATOR_Initialize 0696         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0006  
                        main@res 007C             end_of_initialization 07FE                _EUSART_Initialize 06B2  
             ?_EUSART_Initialize 0070                        _RCSTAbits 019D                          printf@c 002A  
                        printf@f 0078                     __pstringtext 0706              ??_EUSART_Initialize 0070  
               ??_WDT_Initialize 0070                 __CFG_FOSC$INTOSC 0000            __size_of_EUSART_Write 0008  
      __end_of_EUSART_Initialize 06BD        ADC1_GetConversion@channel 0073                     _EUSART_Write 06A1  
         ?_OSCILLATOR_Initialize 0070                   __end_of_printf 07FE              start_initialization 07FE  
__size_of_PIN_MANAGER_Initialize 0014                      putch@txData 0071                 __CFG_LPBOREN$OFF 0000  
                _ADC1_Initialize 06A9                         ??_printf 0020                        ___latbits 0000  
                  __pcstackBANK0 0020       __size_of_EUSART_Initialize 000B                 ___lwdiv@dividend 0072  
         _PIN_MANAGER_Initialize 06BD                         ?___lwdiv 0070      __size_of_ADC1_GetConversion 0018  
                      _hexpowers 0706                 ___lwdiv@quotient 0075                   __size_of_putch 0004  
        __end_of_ADC1_Initialize 06B2                         _PIR1bits 0011                       _ADCON0bits 009D  
                     printf@flag 0024                       printf@prec 0029          ??_OSCILLATOR_Initialize 0070  
               __size_of___lwdiv 0034                  ___lwdiv@divisor 0070                  ___lwdiv@counter 0077  
                       __ptext10 06A9                         __ptext11 06D1                    __size_of_main 001D  
               ?_ADC1_Initialize 0070                        printf@idx 0025                        printf@val 0027  
        __size_of_WDT_Initialize 0004          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
                       printf@ap 0026               EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 06D1  
