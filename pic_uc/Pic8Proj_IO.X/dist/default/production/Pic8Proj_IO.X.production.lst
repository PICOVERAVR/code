

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Mar 17 19:56:32 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,inline
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 1.43
    26                           ; Generated 25/07/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4685 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _TXREG	set	4013
    60  0000                     _PIE1bits	set	3997
    61  0000                     _SPBRG	set	4015
    62  0000                     _BAUDCONbits	set	4024
    63  0000                     _TXSTAbits	set	4012
    64  0000                     _TRISCbits	set	3988
    65  0000                     _RCSTAbits	set	4011
    66  0000                     _TRISAbits	set	3986
    67  0000                     _PORTAbits	set	3968
    68  0000                     _OSCTUNEbits	set	3995
    69  0000                     _OSCCONbits	set	4051
    70  0000                     _TRISD	set	3989
    71  0000                     _PORTD	set	3971
    72                           
    73                           	psect	smallconst
    74  000D00                     __psmallconst:
    75                           	opt stack 0
    76  000D00  00                 	db	0
    77  000D01                     STR_1:
    78  000D01  52                 	db	82	;'R'
    79  000D02  65                 	db	101	;'e'
    80  000D03  61                 	db	97	;'a'
    81  000D04  64                 	db	100	;'d'
    82  000D05  79                 	db	121	;'y'
    83  000D06  2E                 	db	46
    84  000D07  0A                 	db	10
    85  000D08  00                 	db	0
    86  000D09                     STR_2:
    87  000D09  3A                 	db	58	;':'
    88  000D0A  00                 	db	0
    89  0000                     
    90                           ; #config settings
    91  000D0B  00                 	db	0	; dummy byte at the end
    92  0000                     
    93                           	psect	cinit
    94  0010DE                     __pcinit:
    95                           	opt stack 0
    96  0010DE                     start_initialization:
    97                           	opt stack 0
    98  0010DE                     __initialization:
    99                           	opt stack 0
   100  0010DE                     end_of_initialization:
   101                           	opt stack 0
   102  0010DE                     __end_of__initialization:
   103                           	opt stack 0
   104  0010DE  0100               	movlb	0
   105  0010E0  EF4A  F007         	goto	_main	;jump to C main() function
   106                           
   107                           	psect	cstackCOMRAM
   108  000001                     __pcstackCOMRAM:
   109                           	opt stack 0
   110  000001                     ?_strlen:
   111                           	opt stack 0
   112  000001                     ?_keypad_map:
   113                           	opt stack 0
   114  000001                     ?___lwdiv:
   115                           	opt stack 0
   116  000001                     ?___lwmod:
   117                           	opt stack 0
   118  000001                     uart_send@c:
   119                           	opt stack 0
   120  000001                     keypad_map@num:
   121                           	opt stack 0
   122  000001                     uart_setup@baud:
   123                           	opt stack 0
   124  000001                     ___lwdiv@dividend:
   125                           	opt stack 0
   126  000001                     ___lwmod@dividend:
   127                           	opt stack 0
   128  000001                     strlen@s:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x0
   132  000001                     	ds	2
   133  000003                     ??_strlen:
   134  000003                     ??_keypad_map:
   135  000003                     ___lwdiv@divisor:
   136                           	opt stack 0
   137  000003                     ___lwmod@divisor:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x2
   141  000003                     	ds	2
   142  000005                     ?_kpd_read:
   143                           	opt stack 0
   144  000005                     ___lwmod@counter:
   145                           	opt stack 0
   146  000005                     ___lwdiv@quotient:
   147                           	opt stack 0
   148  000005                     strlen@cp:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x4
   152  000005                     	ds	2
   153  000007                     ??_kpd_read:
   154  000007                     ___lwdiv@counter:
   155                           	opt stack 0
   156  000007                     uart_print@c:
   157                           	opt stack 0
   158                           
   159                           ; 2 bytes @ 0x6
   160  000007                     	ds	1
   161  000008                     utoa@buf:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0x7
   165  000008                     	ds	1
   166  000009                     ??_uart_print:
   167  000009                     kpd_read@total:
   168                           	opt stack 0
   169                           
   170                           ; 2 bytes @ 0x8
   171  000009                     	ds	1
   172  00000A                     utoa@val:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0x9
   176  00000A                     	ds	1
   177  00000B                     kpd_read@temp:
   178                           	opt stack 0
   179  00000B                     uart_print@i:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0xA
   183  00000B                     	ds	1
   184  00000C                     utoa@base:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0xB
   188  00000C                     	ds	1
   189  00000D                     kpd_read@i:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0xC
   193  00000D                     	ds	1
   194  00000E                     utoa@v:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0xD
   198  00000E                     	ds	2
   199  000010                     utoa@c:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0xF
   203  000010                     	ds	1
   204  000011                     itoa@buf:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x10
   208  000011                     	ds	2
   209  000013                     itoa@val:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x12
   213  000013                     	ds	2
   214  000015                     itoa@base:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x14
   218  000015                     	ds	2
   219  000017                     itoa@cp:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x16
   223  000017                     	ds	2
   224  000019                     uart_printd@d:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x18
   228  000019                     	ds	2
   229  00001B                     uart_printd@b:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x1A
   233  00001B                     	ds	2
   234  00001D                     uart_printd@buf:
   235                           	opt stack 0
   236                           
   237                           ; 24 bytes @ 0x1C
   238  00001D                     	ds	24
   239  000035                     main@x:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x34
   243  000035                     	ds	2
   244                           
   245 ;;
   246 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   247 ;;
   248 ;; *************** function _main *****************
   249 ;; Defined at:
   250 ;;		line 53 in file "main.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  x               2   52[COMRAM] int 
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   268 ;;Total ram usage:        2 bytes
   269 ;; Hardware stack levels required when called:    4
   270 ;; This function calls:
   271 ;;		_keypad_setup
   272 ;;		_kpd_read
   273 ;;		_setup
   274 ;;		_uart_print
   275 ;;		_uart_printd
   276 ;;		_uart_setup
   277 ;; This function is called by:
   278 ;;		Startup code after reset
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text0
   283  000E94                     __ptext0:
   284                           	opt stack 0
   285  000E94                     _main:
   286                           	opt stack 27
   287                           
   288                           ;main.c: 54: setup();
   289                           
   290                           ;incstack = 0
   291  000E94  EC5B  F008         	call	_setup	;wreg free
   292                           
   293                           ;main.c: 55: uart_setup(9600);
   294  000E98  0E25               	movlw	37
   295  000E9A  6E02               	movwf	uart_setup@baud+1,c
   296  000E9C  0E80               	movlw	128
   297  000E9E  6E01               	movwf	uart_setup@baud,c
   298  000EA0  EC4E  F008         	call	_uart_setup	;wreg free
   299                           
   300                           ;main.c: 56: keypad_setup();
   301  000EA4  EC6A  F008         	call	_keypad_setup	;wreg free
   302                           
   303                           ;main.c: 57: uart_print("Ready.\n");
   304  000EA8  0E01               	movlw	low STR_1
   305  000EAA  6E07               	movwf	uart_print@c,c
   306  000EAC  0E0D               	movlw	high STR_1
   307  000EAE  6E08               	movwf	uart_print@c+1,c
   308  000EB0  EC77  F007         	call	_uart_print	;wreg free
   309  000EB4                     
   310                           ;main.c: 60: int x = kpd_read();
   311  000EB4  ECD8  F006         	call	_kpd_read	;wreg free
   312  000EB8  C005  F035         	movff	?_kpd_read,main@x
   313  000EBC  C006  F036         	movff	?_kpd_read+1,main@x+1
   314                           
   315                           ;main.c: 61: uart_print(":");
   316  000EC0  0E09               	movlw	low STR_2
   317  000EC2  6E07               	movwf	uart_print@c,c
   318  000EC4  0E0D               	movlw	high STR_2
   319  000EC6  6E08               	movwf	uart_print@c+1,c
   320  000EC8  EC77  F007         	call	_uart_print	;wreg free
   321                           
   322                           ;main.c: 62: uart_printd(x, 10);
   323  000ECC  C035  F019         	movff	main@x,uart_printd@d
   324  000ED0  C036  F01A         	movff	main@x+1,uart_printd@d+1
   325  000ED4  0E00               	movlw	0
   326  000ED6  6E1C               	movwf	uart_printd@b+1,c
   327  000ED8  0E0A               	movlw	10
   328  000EDA  6E1B               	movwf	uart_printd@b,c
   329  000EDC  EC39  F008         	call	_uart_printd	;wreg free
   330                           
   331                           ;main.c: 63: uart_print("\n");
   332  000EE0  0E07               	movlw	low (STR_1+6)
   333  000EE2  6E07               	movwf	uart_print@c,c
   334  000EE4  0E0D               	movlw	high (STR_1+6)
   335  000EE6  6E08               	movwf	uart_print@c+1,c
   336  000EE8  EC77  F007         	call	_uart_print	;wreg free
   337                           
   338                           ;main.c: 64: }
   339  000EEC  D7E3               	goto	l39
   340  000EEE                     __end_of_main:
   341                           	opt stack 0
   342                           
   343 ;; *************** function _uart_setup *****************
   344 ;; Defined at:
   345 ;;		line 19 in file "core.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  baud            2    0[COMRAM] unsigned int 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   363 ;;Total ram usage:        2 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text1
   373  00109C                     __ptext1:
   374                           	opt stack 0
   375  00109C                     _uart_setup:
   376                           	opt stack 30
   377                           
   378                           ;core.c: 20: RCSTAbits.SPEN = 1;
   379                           
   380                           ;incstack = 0
   381  00109C  8EAB               	bsf	4011,7,c	;volatile
   382                           
   383                           ;core.c: 21: TRISCbits.TRISC7 = 1;
   384  00109E  8E94               	bsf	3988,7,c	;volatile
   385                           
   386                           ;core.c: 22: TRISCbits.TRISC6 = 0;
   387  0010A0  9C94               	bcf	3988,6,c	;volatile
   388                           
   389                           ;core.c: 25: TXSTAbits.BRGH = 1;
   390  0010A2  84AC               	bsf	4012,2,c	;volatile
   391                           
   392                           ;core.c: 26: BAUDCONbits.BRG16 = 0;
   393  0010A4  96B8               	bcf	4024,3,c	;volatile
   394                           
   395                           ;core.c: 28: SPBRG = 51;
   396  0010A6  0E33               	movlw	51
   397  0010A8  6EAF               	movwf	4015,c	;volatile
   398                           
   399                           ;core.c: 30: TXSTAbits.SYNC = 0;
   400  0010AA  98AC               	bcf	4012,4,c	;volatile
   401                           
   402                           ;core.c: 32: PIE1bits.TXIE = 0;
   403  0010AC  989D               	bcf	3997,4,c	;volatile
   404                           
   405                           ;core.c: 35: TXSTAbits.TXEN = 1;
   406  0010AE  8AAC               	bsf	4012,5,c	;volatile
   407                           
   408                           ;core.c: 36: RCSTAbits.CREN = 1;
   409  0010B0  88AB               	bsf	4011,4,c	;volatile
   410                           
   411                           ;core.c: 37: RCSTAbits.SPEN = 1;
   412  0010B2  8EAB               	bsf	4011,7,c	;volatile
   413  0010B4  0012               	return		;funcret
   414  0010B6                     __end_of_uart_setup:
   415                           	opt stack 0
   416                           
   417 ;; *************** function _uart_printd *****************
   418 ;; Defined at:
   419 ;;		line 53 in file "core.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  d               2   24[COMRAM] unsigned int 
   422 ;;  b               2   26[COMRAM] int 
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  buf            24   28[COMRAM] unsigned char [24]
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   435 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   437 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   438 ;;Total ram usage:       28 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    3
   441 ;; This function calls:
   442 ;;		_itoa
   443 ;;		_uart_print
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text2
   450  001072                     __ptext2:
   451                           	opt stack 0
   452  001072                     _uart_printd:
   453                           	opt stack 27
   454                           
   455                           ;core.c: 54: char buf[24];
   456                           ;core.c: 55: itoa(buf, d, b);
   457                           
   458                           ;incstack = 0
   459  001072  0E1D               	movlw	low uart_printd@buf
   460  001074  6E11               	movwf	itoa@buf,c
   461  001076  0E00               	movlw	high uart_printd@buf
   462  001078  6E12               	movwf	itoa@buf+1,c
   463  00107A  C019  F013         	movff	uart_printd@d,itoa@val
   464  00107E  C01A  F014         	movff	uart_printd@d+1,itoa@val+1
   465  001082  C01B  F015         	movff	uart_printd@b,itoa@base
   466  001086  C01C  F016         	movff	uart_printd@b+1,itoa@base+1
   467  00108A  ECF7  F007         	call	_itoa	;wreg free
   468                           
   469                           ;core.c: 56: uart_print(buf);
   470  00108E  0E1D               	movlw	low uart_printd@buf
   471  001090  6E07               	movwf	uart_print@c,c
   472  001092  0E00               	movlw	high uart_printd@buf
   473  001094  6E08               	movwf	uart_print@c+1,c
   474  001096  EC77  F007         	call	_uart_print	;wreg free
   475  00109A  0012               	return		;funcret
   476  00109C                     __end_of_uart_printd:
   477                           	opt stack 0
   478                           
   479 ;; *************** function _uart_print *****************
   480 ;; Defined at:
   481 ;;		line 47 in file "core.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  c               2    6[COMRAM] PTR const unsigned char 
   484 ;;		 -> uart_printd@buf(24), STR_3(2), STR_2(2), STR_1(8), 
   485 ;; Auto vars:     Size  Location     Type
   486 ;;  i               2   10[COMRAM] unsigned int 
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   499 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;Total ram usage:        6 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    1
   503 ;; This function calls:
   504 ;;		_strlen
   505 ;;		_uart_send
   506 ;; This function is called by:
   507 ;;		_main
   508 ;;		_uart_printd
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text3
   513  000EEE                     __ptext3:
   514                           	opt stack 0
   515  000EEE                     _uart_print:
   516                           	opt stack 28
   517                           
   518                           ;core.c: 48: for (unsigned int i = 0; i < strlen(c); i++) {
   519                           
   520                           ;incstack = 0
   521  000EEE  0E00               	movlw	0
   522  000EF0  6E0C               	movwf	uart_print@i+1,c
   523  000EF2  0E00               	movlw	0
   524  000EF4  6E0B               	movwf	uart_print@i,c
   525  000EF6  D01B               	goto	l82
   526  000EF8                     
   527                           ;core.c: 49: uart_send(c[i]);
   528  000EF8  500B               	movf	uart_print@i,w,c
   529  000EFA  2407               	addwf	uart_print@c,w,c
   530  000EFC  6E09               	movwf	??_uart_print& (0+255),c
   531  000EFE  500C               	movf	uart_print@i+1,w,c
   532  000F00  2008               	addwfc	uart_print@c+1,w,c
   533  000F02  6E0A               	movwf	(??_uart_print+1)& (0+255),c
   534  000F04  C009  FFF6         	movff	??_uart_print,tblptrl
   535  000F08  C00A  FFF7         	movff	??_uart_print+1,tblptrh
   536  000F0C  0E00               	movlw	low (__smallconst shr (0+16))
   537  000F0E  6EF8               	movwf	tblptru,c
   538  000F10  0E0C               	movlw	(high __ramtop+-1)
   539  000F12  64F7               	cpfsgt	tblptrh,c
   540  000F14  D003               	bra	u317
   541  000F16  0008               	tblrd		*
   542  000F18  50F5               	movf	tablat,w,c
   543  000F1A  D005               	bra	u310
   544  000F1C                     u317:
   545  000F1C  CFF6 FFE9          	movff	tblptrl,fsr0l
   546  000F20  CFF7 FFEA          	movff	tblptrh,fsr0h
   547  000F24  50EF               	movf	indf0,w,c
   548  000F26                     u310:
   549  000F26  EC64  F008         	call	_uart_send
   550  000F2A  4A0B               	infsnz	uart_print@i,f,c
   551  000F2C  2A0C               	incf	uart_print@i+1,f,c
   552  000F2E                     l82:
   553  000F2E  C007  F001         	movff	uart_print@c,strlen@s
   554  000F32  C008  F002         	movff	uart_print@c+1,strlen@s+1
   555  000F36  ECA4  F007         	call	_strlen	;wreg free
   556  000F3A  5001               	movf	?_strlen,w,c
   557  000F3C  5C0B               	subwf	uart_print@i,w,c
   558  000F3E  5002               	movf	?_strlen+1,w,c
   559  000F40  580C               	subwfb	uart_print@i+1,w,c
   560  000F42  B0D8               	btfsc	status,0,c
   561  000F44  0012               	return	
   562  000F46  D7D8               	goto	l83
   563  000F48                     __end_of_uart_print:
   564                           	opt stack 0
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           indf0	equ	0xFEF
   570                           fsr0h	equ	0xFEA
   571                           fsr0l	equ	0xFE9
   572                           status	equ	0xFD8
   573                           
   574 ;; *************** function _uart_send *****************
   575 ;; Defined at:
   576 ;;		line 40 in file "core.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  c               1    wreg     unsigned char 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  c               1    0[COMRAM] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   594 ;;Total ram usage:        1 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_uart_print
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text4
   604  0010C8                     __ptext4:
   605                           	opt stack 0
   606  0010C8                     _uart_send:
   607                           	opt stack 28
   608                           
   609                           ;incstack = 0
   610                           ;uart_send@c stored from wreg
   611  0010C8  6E01               	movwf	uart_send@c,c
   612                           
   613                           ;core.c: 41: TXREG = c;
   614  0010CA  C001  FFAD         	movff	uart_send@c,4013	;volatile
   615  0010CE  B2AC               	btfsc	4012,1,c	;volatile
   616  0010D0  0012               	return	
   617  0010D2  D7FD               	goto	l77
   618  0010D4                     __end_of_uart_send:
   619                           	opt stack 0
   620                           tblptru	equ	0xFF8
   621                           tblptrh	equ	0xFF7
   622                           tblptrl	equ	0xFF6
   623                           tablat	equ	0xFF5
   624                           indf0	equ	0xFEF
   625                           fsr0h	equ	0xFEA
   626                           fsr0l	equ	0xFE9
   627                           status	equ	0xFD8
   628                           
   629 ;; *************** function _strlen *****************
   630 ;; Defined at:
   631 ;;		line 4 in file "/Applications/microchip/xc8/v1.43/sources/common/strlen.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  s               2    0[COMRAM] PTR const unsigned char 
   634 ;;		 -> uart_printd@buf(24), STR_3(2), STR_2(2), STR_1(8), 
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  cp              2    4[COMRAM] PTR const unsigned char 
   637 ;;		 -> uart_printd@buf(24), STR_3(2), STR_2(2), STR_1(8), 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  2    0[COMRAM] unsigned int 
   640 ;; Registers used:
   641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   650 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   651 ;;Total ram usage:        6 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; This function calls:
   654 ;;		Nothing
   655 ;; This function is called by:
   656 ;;		_uart_print
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text5
   661  000F48                     __ptext5:
   662                           	opt stack 0
   663  000F48                     _strlen:
   664                           	opt stack 28
   665                           
   666                           ;incstack = 0
   667  000F48  C001  F005         	movff	strlen@s,strlen@cp
   668  000F4C  C002  F006         	movff	strlen@s+1,strlen@cp+1
   669  000F50  D002               	goto	l650
   670  000F52  4A05               	infsnz	strlen@cp,f,c
   671  000F54  2A06               	incf	strlen@cp+1,f,c
   672  000F56                     l650:
   673  000F56  C005  FFF6         	movff	strlen@cp,tblptrl
   674  000F5A  C006  FFF7         	movff	strlen@cp+1,tblptrh
   675  000F5E  0E00               	movlw	low (__smallconst shr (0+16))
   676  000F60  6EF8               	movwf	tblptru,c
   677  000F62  0E0C               	movlw	(high __ramtop+-1)
   678  000F64  64F7               	cpfsgt	tblptrh,c
   679  000F66  D003               	bra	u267
   680  000F68  0008               	tblrd		*
   681  000F6A  50F5               	movf	tablat,w,c
   682  000F6C  D005               	bra	u260
   683  000F6E                     u267:
   684  000F6E  CFF6 FFE9          	movff	tblptrl,fsr0l
   685  000F72  CFF7 FFEA          	movff	tblptrh,fsr0h
   686  000F76  50EF               	movf	indf0,w,c
   687  000F78                     u260:
   688  000F78  0900               	iorlw	0
   689  000F7A  A4D8               	btfss	status,2,c
   690  000F7C  D7EA               	goto	l651
   691  000F7E  C001  F003         	movff	strlen@s,??_strlen
   692  000F82  C002  F004         	movff	strlen@s+1,??_strlen+1
   693  000F86  1E03               	comf	??_strlen,f,c
   694  000F88  1E04               	comf	??_strlen+1,f,c
   695  000F8A  4A03               	infsnz	??_strlen,f,c
   696  000F8C  2A04               	incf	??_strlen+1,f,c
   697  000F8E  5005               	movf	strlen@cp,w,c
   698  000F90  2403               	addwf	??_strlen,w,c
   699  000F92  6E01               	movwf	?_strlen,c
   700  000F94  5006               	movf	strlen@cp+1,w,c
   701  000F96  2004               	addwfc	??_strlen+1,w,c
   702  000F98  6E02               	movwf	?_strlen+1,c
   703  000F9A  0012               	return	
   704  000F9C                     __end_of_strlen:
   705                           	opt stack 0
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           indf0	equ	0xFEF
   711                           fsr0h	equ	0xFEA
   712                           fsr0l	equ	0xFE9
   713                           status	equ	0xFD8
   714                           
   715 ;; *************** function _itoa *****************
   716 ;; Defined at:
   717 ;;		line 4 in file "/Applications/microchip/xc8/v1.43/sources/common/itoa.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  buf             2   16[COMRAM] PTR unsigned char 
   720 ;;		 -> uart_printd@buf(24), 
   721 ;;  val             2   18[COMRAM] int 
   722 ;;  base            2   20[COMRAM] int 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  cp              2   22[COMRAM] PTR unsigned char 
   725 ;;		 -> uart_printd@buf(24), 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  2   16[COMRAM] PTR unsigned char 
   728 ;; Registers used:
   729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   735 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   738 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   739 ;;Total ram usage:        8 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    2
   742 ;; This function calls:
   743 ;;		_utoa
   744 ;; This function is called by:
   745 ;;		_uart_printd
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text6
   750  000FEE                     __ptext6:
   751                           	opt stack 0
   752  000FEE                     _itoa:
   753                           	opt stack 27
   754                           
   755                           ;incstack = 0
   756  000FEE  C011  F017         	movff	itoa@buf,itoa@cp
   757  000FF2  C012  F018         	movff	itoa@buf+1,itoa@cp+1
   758  000FF6  AE14               	btfss	itoa@val+1,7,c
   759  000FF8  D00C               	goto	l419
   760  000FFA  C011  FFD9         	movff	itoa@buf,fsr2l
   761  000FFE  C012  FFDA         	movff	itoa@buf+1,fsr2h
   762  001002  0E2D               	movlw	45
   763  001004  6EDF               	movwf	indf2,c
   764  001006  4A11               	infsnz	itoa@buf,f,c
   765  001008  2A12               	incf	itoa@buf+1,f,c
   766  00100A  6C13               	negf	itoa@val,c
   767  00100C  1E14               	comf	itoa@val+1,f,c
   768  00100E  B0D8               	btfsc	status,0,c
   769  001010  2A14               	incf	itoa@val+1,f,c
   770  001012                     l419:
   771  001012  C011  F008         	movff	itoa@buf,utoa@buf
   772  001016  C012  F009         	movff	itoa@buf+1,utoa@buf+1
   773  00101A  C013  F00A         	movff	itoa@val,utoa@val
   774  00101E  C014  F00B         	movff	itoa@val+1,utoa@val+1
   775  001022  C015  F00C         	movff	itoa@base,utoa@base
   776  001026  C016  F00D         	movff	itoa@base+1,utoa@base+1
   777  00102A  EC86  F006         	call	_utoa	;wreg free
   778  00102E  0012               	return	
   779  001030                     __end_of_itoa:
   780                           	opt stack 0
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           indf0	equ	0xFEF
   786                           fsr0h	equ	0xFEA
   787                           fsr0l	equ	0xFE9
   788                           indf2	equ	0xFDF
   789                           fsr2h	equ	0xFDA
   790                           fsr2l	equ	0xFD9
   791                           status	equ	0xFD8
   792                           
   793 ;; *************** function _utoa *****************
   794 ;; Defined at:
   795 ;;		line 17 in file "/Applications/microchip/xc8/v1.43/sources/common/itoa.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  buf             2    7[COMRAM] PTR unsigned char 
   798 ;;		 -> uart_printd@buf(24), 
   799 ;;  val             2    9[COMRAM] unsigned int 
   800 ;;  base            2   11[COMRAM] int 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  v               2   13[COMRAM] unsigned int 
   803 ;;  c               1   15[COMRAM] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  2    7[COMRAM] PTR unsigned char 
   806 ;; Registers used:
   807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   813 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   814 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   816 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   817 ;;Total ram usage:        9 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    1
   820 ;; This function calls:
   821 ;;		___lwdiv
   822 ;;		___lwmod
   823 ;; This function is called by:
   824 ;;		_itoa
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text7
   829  000D0C                     __ptext7:
   830                           	opt stack 0
   831  000D0C                     _utoa:
   832                           	opt stack 27
   833                           
   834                           ;incstack = 0
   835  000D0C  C00A  F00E         	movff	utoa@val,utoa@v
   836  000D10  C00B  F00F         	movff	utoa@val+1,utoa@v+1
   837  000D14  C00E  F001         	movff	utoa@v,___lwdiv@dividend
   838  000D18  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
   839  000D1C  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   840  000D20  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   841  000D24  ECCE  F007         	call	___lwdiv	;wreg free
   842  000D28  C001  F00E         	movff	?___lwdiv,utoa@v
   843  000D2C  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
   844  000D30  4A08               	infsnz	utoa@buf,f,c
   845  000D32  2A09               	incf	utoa@buf+1,f,c
   846  000D34  500E               	movf	utoa@v,w,c
   847  000D36  100F               	iorwf	utoa@v+1,w,c
   848  000D38  A4D8               	btfss	status,2,c
   849  000D3A  D7EC               	goto	l423
   850  000D3C  C008  FFD9         	movff	utoa@buf,fsr2l
   851  000D40  C009  FFDA         	movff	utoa@buf+1,fsr2h
   852  000D44  0E00               	movlw	0
   853  000D46  6EDF               	movwf	indf2,c
   854  000D48  0608               	decf	utoa@buf,f,c
   855  000D4A  A0D8               	btfss	status,0,c
   856  000D4C  0609               	decf	utoa@buf+1,f,c
   857  000D4E  C00A  F001         	movff	utoa@val,___lwmod@dividend
   858  000D52  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
   859  000D56  C00C  F003         	movff	utoa@base,___lwmod@divisor
   860  000D5A  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
   861  000D5E  EC18  F008         	call	___lwmod	;wreg free
   862  000D62  5001               	movf	?___lwmod,w,c
   863  000D64  6E10               	movwf	utoa@c,c
   864  000D66  C00A  F001         	movff	utoa@val,___lwdiv@dividend
   865  000D6A  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
   866  000D6E  C00C  F003         	movff	utoa@base,___lwdiv@divisor
   867  000D72  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
   868  000D76  ECCE  F007         	call	___lwdiv	;wreg free
   869  000D7A  C001  F00A         	movff	?___lwdiv,utoa@val
   870  000D7E  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
   871  000D82  0E09               	movlw	9
   872  000D84  6410               	cpfsgt	utoa@c,c
   873  000D86  D002               	goto	l426
   874  000D88  0E07               	movlw	7
   875  000D8A  2610               	addwf	utoa@c,f,c
   876  000D8C                     l426:
   877  000D8C  0E30               	movlw	48
   878  000D8E  2610               	addwf	utoa@c,f,c
   879  000D90  C008  FFD9         	movff	utoa@buf,fsr2l
   880  000D94  C009  FFDA         	movff	utoa@buf+1,fsr2h
   881  000D98  C010  FFDF         	movff	utoa@c,indf2
   882  000D9C  0608               	decf	utoa@buf,f,c
   883  000D9E  A0D8               	btfss	status,0,c
   884  000DA0  0609               	decf	utoa@buf+1,f,c
   885  000DA2  500A               	movf	utoa@val,w,c
   886  000DA4  100B               	iorwf	utoa@val+1,w,c
   887  000DA6  A4D8               	btfss	status,2,c
   888  000DA8  D7D2               	goto	l425
   889                           
   890                           ;	Return value of _utoa is never used
   891  000DAA  4A08               	infsnz	utoa@buf,f,c
   892  000DAC  2A09               	incf	utoa@buf+1,f,c
   893  000DAE  0012               	return	
   894  000DB0                     __end_of_utoa:
   895                           	opt stack 0
   896                           tblptru	equ	0xFF8
   897                           tblptrh	equ	0xFF7
   898                           tblptrl	equ	0xFF6
   899                           tablat	equ	0xFF5
   900                           indf0	equ	0xFEF
   901                           fsr0h	equ	0xFEA
   902                           fsr0l	equ	0xFE9
   903                           indf2	equ	0xFDF
   904                           fsr2h	equ	0xFDA
   905                           fsr2l	equ	0xFD9
   906                           status	equ	0xFD8
   907                           
   908 ;; *************** function ___lwmod *****************
   909 ;; Defined at:
   910 ;;		line 8 in file "/Applications/microchip/xc8/v1.43/sources/common/lwmod.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  dividend        2    0[COMRAM] unsigned int 
   913 ;;  divisor         2    2[COMRAM] unsigned int 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  counter         1    4[COMRAM] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  2    0[COMRAM] unsigned int 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   928 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   929 ;;Total ram usage:        5 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_utoa
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text8
   939  001030                     __ptext8:
   940                           	opt stack 0
   941  001030                     ___lwmod:
   942                           	opt stack 27
   943                           
   944                           ;incstack = 0
   945  001030  5003               	movf	___lwmod@divisor,w,c
   946  001032  1004               	iorwf	___lwmod@divisor+1,w,c
   947  001034  B4D8               	btfsc	status,2,c
   948  001036  D018               	goto	l521
   949  001038  0E01               	movlw	1
   950  00103A  6E05               	movwf	___lwmod@counter,c
   951  00103C  D004               	goto	l516
   952  00103E  90D8               	bcf	status,0,c
   953  001040  3603               	rlcf	___lwmod@divisor,f,c
   954  001042  3604               	rlcf	___lwmod@divisor+1,f,c
   955  001044  2A05               	incf	___lwmod@counter,f,c
   956  001046                     l516:
   957  001046  AE04               	btfss	___lwmod@divisor+1,7,c
   958  001048  D7FA               	goto	l517
   959  00104A                     u240:
   960  00104A  5003               	movf	___lwmod@divisor,w,c
   961  00104C  5C01               	subwf	___lwmod@dividend,w,c
   962  00104E  5004               	movf	___lwmod@divisor+1,w,c
   963  001050  5802               	subwfb	___lwmod@dividend+1,w,c
   964  001052  A0D8               	btfss	status,0,c
   965  001054  D004               	goto	l520
   966  001056  5003               	movf	___lwmod@divisor,w,c
   967  001058  5E01               	subwf	___lwmod@dividend,f,c
   968  00105A  5004               	movf	___lwmod@divisor+1,w,c
   969  00105C  5A02               	subwfb	___lwmod@dividend+1,f,c
   970  00105E                     l520:
   971  00105E  90D8               	bcf	status,0,c
   972  001060  3204               	rrcf	___lwmod@divisor+1,f,c
   973  001062  3203               	rrcf	___lwmod@divisor,f,c
   974  001064  2E05               	decfsz	___lwmod@counter,f,c
   975  001066  D7F1               	goto	u240
   976  001068                     l521:
   977  001068  C001  F001         	movff	___lwmod@dividend,?___lwmod
   978  00106C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   979  001070  0012               	return		;funcret
   980  001072                     __end_of___lwmod:
   981                           	opt stack 0
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           indf0	equ	0xFEF
   987                           fsr0h	equ	0xFEA
   988                           fsr0l	equ	0xFE9
   989                           indf2	equ	0xFDF
   990                           fsr2h	equ	0xFDA
   991                           fsr2l	equ	0xFD9
   992                           status	equ	0xFD8
   993                           
   994 ;; *************** function ___lwdiv *****************
   995 ;; Defined at:
   996 ;;		line 8 in file "/Applications/microchip/xc8/v1.43/sources/common/lwdiv.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  dividend        2    0[COMRAM] unsigned int 
   999 ;;  divisor         2    2[COMRAM] unsigned int 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  quotient        2    4[COMRAM] unsigned int 
  1002 ;;  counter         1    6[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2    0[COMRAM] unsigned int 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1013 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1015 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1016 ;;Total ram usage:        7 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_utoa
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text9
  1026  000F9C                     __ptext9:
  1027                           	opt stack 0
  1028  000F9C                     ___lwdiv:
  1029                           	opt stack 27
  1030                           
  1031                           ;incstack = 0
  1032  000F9C  0E00               	movlw	0
  1033  000F9E  6E06               	movwf	___lwdiv@quotient+1,c
  1034  000FA0  0E00               	movlw	0
  1035  000FA2  6E05               	movwf	___lwdiv@quotient,c
  1036  000FA4  5003               	movf	___lwdiv@divisor,w,c
  1037  000FA6  1004               	iorwf	___lwdiv@divisor+1,w,c
  1038  000FA8  B4D8               	btfsc	status,2,c
  1039  000FAA  D01C               	goto	l511
  1040  000FAC  0E01               	movlw	1
  1041  000FAE  6E07               	movwf	___lwdiv@counter,c
  1042  000FB0  D004               	goto	l506
  1043  000FB2  90D8               	bcf	status,0,c
  1044  000FB4  3603               	rlcf	___lwdiv@divisor,f,c
  1045  000FB6  3604               	rlcf	___lwdiv@divisor+1,f,c
  1046  000FB8  2A07               	incf	___lwdiv@counter,f,c
  1047  000FBA                     l506:
  1048  000FBA  AE04               	btfss	___lwdiv@divisor+1,7,c
  1049  000FBC  D7FA               	goto	l507
  1050  000FBE                     u210:
  1051  000FBE  90D8               	bcf	status,0,c
  1052  000FC0  3605               	rlcf	___lwdiv@quotient,f,c
  1053  000FC2  3606               	rlcf	___lwdiv@quotient+1,f,c
  1054  000FC4  5003               	movf	___lwdiv@divisor,w,c
  1055  000FC6  5C01               	subwf	___lwdiv@dividend,w,c
  1056  000FC8  5004               	movf	___lwdiv@divisor+1,w,c
  1057  000FCA  5802               	subwfb	___lwdiv@dividend+1,w,c
  1058  000FCC  A0D8               	btfss	status,0,c
  1059  000FCE  D005               	goto	l510
  1060  000FD0  5003               	movf	___lwdiv@divisor,w,c
  1061  000FD2  5E01               	subwf	___lwdiv@dividend,f,c
  1062  000FD4  5004               	movf	___lwdiv@divisor+1,w,c
  1063  000FD6  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1064  000FD8  8005               	bsf	___lwdiv@quotient,0,c
  1065  000FDA                     l510:
  1066  000FDA  90D8               	bcf	status,0,c
  1067  000FDC  3204               	rrcf	___lwdiv@divisor+1,f,c
  1068  000FDE  3203               	rrcf	___lwdiv@divisor,f,c
  1069  000FE0  2E07               	decfsz	___lwdiv@counter,f,c
  1070  000FE2  D7ED               	goto	u210
  1071  000FE4                     l511:
  1072  000FE4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1073  000FE8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1074  000FEC  0012               	return		;funcret
  1075  000FEE                     __end_of___lwdiv:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           indf0	equ	0xFEF
  1082                           fsr0h	equ	0xFEA
  1083                           fsr0l	equ	0xFE9
  1084                           indf2	equ	0xFDF
  1085                           fsr2h	equ	0xFDA
  1086                           fsr2l	equ	0xFD9
  1087                           status	equ	0xFD8
  1088                           
  1089 ;; *************** function _setup *****************
  1090 ;; Defined at:
  1091 ;;		line 5 in file "core.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		None
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text10
  1119  0010B6                     __ptext10:
  1120                           	opt stack 0
  1121  0010B6                     _setup:
  1122                           	opt stack 30
  1123                           
  1124                           ;core.c: 6: OSCCONbits.IRCF0 = 1;
  1125                           
  1126                           ;incstack = 0
  1127  0010B6  88D3               	bsf	4051,4,c	;volatile
  1128                           
  1129                           ;core.c: 7: OSCCONbits.IRCF1 = 1;
  1130  0010B8  8AD3               	bsf	4051,5,c	;volatile
  1131                           
  1132                           ;core.c: 8: OSCCONbits.IRCF2 = 1;
  1133  0010BA  8CD3               	bsf	4051,6,c	;volatile
  1134                           
  1135                           ;core.c: 10: OSCTUNEbits.PLLEN = 1;
  1136  0010BC  8C9B               	bsf	3995,6,c	;volatile
  1137                           
  1138                           ;core.c: 12: OSCCONbits.SCS1 = 1;
  1139  0010BE  82D3               	bsf	4051,1,c	;volatile
  1140                           
  1141                           ;core.c: 14: PORTAbits.AN0 = 0;
  1142  0010C0  9080               	bcf	3968,0,c	;volatile
  1143                           
  1144                           ;core.c: 15: TRISAbits.TRISA0 = 0;
  1145  0010C2  9092               	bcf	3986,0,c	;volatile
  1146                           
  1147                           ;core.c: 16: PORTAbits.RA0 = 1;
  1148  0010C4  8080               	bsf	3968,0,c	;volatile
  1149  0010C6  0012               	return		;funcret
  1150  0010C8                     __end_of_setup:
  1151                           	opt stack 0
  1152                           tblptru	equ	0xFF8
  1153                           tblptrh	equ	0xFF7
  1154                           tblptrl	equ	0xFF6
  1155                           tablat	equ	0xFF5
  1156                           indf0	equ	0xFEF
  1157                           fsr0h	equ	0xFEA
  1158                           fsr0l	equ	0xFE9
  1159                           indf2	equ	0xFDF
  1160                           fsr2h	equ	0xFDA
  1161                           fsr2l	equ	0xFD9
  1162                           status	equ	0xFD8
  1163                           
  1164 ;; *************** function _kpd_read *****************
  1165 ;; Defined at:
  1166 ;;		line 38 in file "main.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  temp            2   10[COMRAM] int 
  1171 ;;  i               1   12[COMRAM] unsigned char 
  1172 ;;  numbuf         12    0        int [6]
  1173 ;;  total           2    8[COMRAM] int 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  2    4[COMRAM] int 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1184 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1186 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1187 ;;Total ram usage:        9 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    1
  1190 ;; This function calls:
  1191 ;;		_keypad_map
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text11
  1198  000DB0                     __ptext11:
  1199                           	opt stack 0
  1200  000DB0                     _kpd_read:
  1201                           	opt stack 29
  1202                           
  1203                           ;main.c: 39: int numbuf[6];
  1204                           ;main.c: 40: int total = 0;
  1205                           
  1206                           ;incstack = 0
  1207  000DB0  0E00               	movlw	0
  1208  000DB2  6E0A               	movwf	kpd_read@total+1,c
  1209  000DB4  0E00               	movlw	0
  1210  000DB6  6E09               	movwf	kpd_read@total,c
  1211                           
  1212                           ;main.c: 41: for (uint8_t i = 0; i < 4; i++) {
  1213  000DB8  0E00               	movlw	0
  1214  000DBA  6E0D               	movwf	kpd_read@i,c
  1215  000DBC                     l1048:
  1216  000DBC  0E03               	movlw	3
  1217  000DBE  640D               	cpfsgt	kpd_read@i,c
  1218  000DC0  D001               	goto	l28
  1219  000DC2  D033               	goto	u370
  1220  000DC4                     l28:
  1221                           
  1222                           ;main.c: 42: PORTD = (uint8_t)(1 << i);
  1223  000DC4  C00D  F007         	movff	kpd_read@i,??_kpd_read
  1224  000DC8  0E01               	movlw	1
  1225  000DCA  6E08               	movwf	(??_kpd_read+1)& (0+255),c
  1226  000DCC  2A07               	incf	??_kpd_read,f,c
  1227  000DCE  D002               	goto	u354
  1228  000DD0                     u355:
  1229  000DD0  90D8               	bcf	status,0,c
  1230  000DD2  3608               	rlcf	??_kpd_read+1,f,c
  1231  000DD4                     u354:
  1232  000DD4  2E07               	decfsz	??_kpd_read,f,c
  1233  000DD6  D7FC               	goto	u355
  1234  000DD8  5008               	movf	??_kpd_read+1,w,c
  1235  000DDA  6E83               	movwf	3971,c	;volatile
  1236  000DDC  F000               	nop		;# 
  1237  000DDE  F000               	nop		;# 
  1238  000DE0  F000               	nop		;# 
  1239                           
  1240                           ;main.c: 45: int temp = PORTD >> 4;
  1241  000DE2  CF83 F007          	movff	3971,??_kpd_read	;volatile
  1242  000DE6  3A07               	swapf	??_kpd_read,f,c
  1243  000DE8  0E0F               	movlw	15
  1244  000DEA  1607               	andwf	??_kpd_read,f,c
  1245  000DEC  5007               	movf	??_kpd_read,w,c
  1246  000DEE  6E0B               	movwf	kpd_read@temp,c
  1247  000DF0  6A0C               	clrf	kpd_read@temp+1,c
  1248                           
  1249                           ;main.c: 46: total += keypad_map(temp) == 0 ? 0 : keypad_map(temp) + (i * 4);
  1250  000DF2  C00B  F001         	movff	kpd_read@temp,keypad_map@num
  1251  000DF6  C00C  F002         	movff	kpd_read@temp+1,keypad_map@num+1
  1252  000DFA  EC1A  F007         	call	_keypad_map	;wreg free
  1253  000DFE  5001               	movf	?_keypad_map,w,c
  1254  000E00  1002               	iorwf	?_keypad_map+1,w,c
  1255  000E02  B4D8               	btfsc	status,2,c
  1256  000E04  D010               	goto	l31
  1257  000E06  500D               	movf	kpd_read@i,w,c
  1258  000E08  0D04               	mullw	4
  1259  000E0A  C00B  F001         	movff	kpd_read@temp,keypad_map@num
  1260  000E0E  C00C  F002         	movff	kpd_read@temp+1,keypad_map@num+1
  1261  000E12  EC1A  F007         	call	_keypad_map	;wreg free
  1262  000E16  50F3               	movf	prodl,w,c
  1263  000E18  2601               	addwf	?_keypad_map,f,c
  1264  000E1A  50F4               	movf	prodh,w,c
  1265  000E1C  2202               	addwfc	?_keypad_map+1,f,c
  1266  000E1E  5001               	movf	?_keypad_map,w,c
  1267  000E20  2609               	addwf	kpd_read@total,f,c
  1268  000E22  5002               	movf	?_keypad_map+1,w,c
  1269  000E24  220A               	addwfc	kpd_read@total+1,f,c
  1270  000E26                     l31:
  1271  000E26  2A0D               	incf	kpd_read@i,f,c
  1272  000E28  D7C9               	goto	l1048
  1273  000E2A                     u370:
  1274                           
  1275                           ;main.c: 47: }
  1276                           ;main.c: 48: return total;
  1277  000E2A  C009  F005         	movff	kpd_read@total,?_kpd_read
  1278  000E2E  C00A  F006         	movff	kpd_read@total+1,?_kpd_read+1
  1279  000E32  0012               	return		;funcret
  1280  000E34                     __end_of_kpd_read:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           prodh	equ	0xFF4
  1287                           prodl	equ	0xFF3
  1288                           indf0	equ	0xFEF
  1289                           fsr0h	equ	0xFEA
  1290                           fsr0l	equ	0xFE9
  1291                           indf2	equ	0xFDF
  1292                           fsr2h	equ	0xFDA
  1293                           fsr2l	equ	0xFD9
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _keypad_map *****************
  1297 ;; Defined at:
  1298 ;;		line 19 in file "main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  num             2    0[COMRAM] int 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2    0[COMRAM] int 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1315 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;Total ram usage:        4 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_kpd_read
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text12
  1326  000E34                     __ptext12:
  1327                           	opt stack 0
  1328  000E34                     _keypad_map:
  1329                           	opt stack 29
  1330                           
  1331                           ;main.c: 20: switch(num) {
  1332                           
  1333                           ;incstack = 0
  1334  000E34  D019               	goto	l18
  1335  000E36                     
  1336                           ;main.c: 22: return 1;
  1337  000E36  0E00               	movlw	0
  1338  000E38  6E02               	movwf	?_keypad_map+1,c
  1339  000E3A  0E01               	movlw	1
  1340  000E3C  6E01               	movwf	?_keypad_map,c
  1341  000E3E  0012               	return	
  1342  000E40                     
  1343                           ;main.c: 24: return 2;
  1344  000E40  0E00               	movlw	0
  1345  000E42  6E02               	movwf	?_keypad_map+1,c
  1346  000E44  0E02               	movlw	2
  1347  000E46  6E01               	movwf	?_keypad_map,c
  1348  000E48  0012               	return	
  1349  000E4A                     
  1350                           ;main.c: 26: return 3;
  1351  000E4A  0E00               	movlw	0
  1352  000E4C  6E02               	movwf	?_keypad_map+1,c
  1353  000E4E  0E03               	movlw	3
  1354  000E50  6E01               	movwf	?_keypad_map,c
  1355  000E52  0012               	return	
  1356  000E54                     
  1357                           ;main.c: 28: return 4;
  1358  000E54  0E00               	movlw	0
  1359  000E56  6E02               	movwf	?_keypad_map+1,c
  1360  000E58  0E04               	movlw	4
  1361  000E5A  6E01               	movwf	?_keypad_map,c
  1362  000E5C  0012               	return	
  1363  000E5E                     
  1364                           ;main.c: 30: return 0;
  1365  000E5E  0E00               	movlw	0
  1366  000E60  6E02               	movwf	?_keypad_map+1,c
  1367  000E62  0E00               	movlw	0
  1368  000E64  6E01               	movwf	?_keypad_map,c
  1369                           
  1370                           ;main.c: 31: }
  1371  000E66  0012               	return	
  1372  000E68                     l18:
  1373  000E68  C001  F003         	movff	keypad_map@num,??_keypad_map
  1374  000E6C  C002  F004         	movff	keypad_map@num+1,??_keypad_map+1
  1375                           
  1376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1377                           ; Switch size 1, requested type "space"
  1378                           ; Number of cases is 1, Range of values is 0 to 0
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte            4     3 (average)
  1382                           ;	Chosen strategy is simple_byte
  1383  000E70  5004               	movf	??_keypad_map+1,w,c
  1384  000E72  0A00               	xorlw	0	; case 0
  1385  000E74  A4D8               	btfss	status,2,c
  1386  000E76  D7F3               	goto	l24
  1387                           
  1388                           ; Switch size 1, requested type "space"
  1389                           ; Number of cases is 4, Range of values is 1 to 8
  1390                           ; switch strategies available:
  1391                           ; Name         Instructions Cycles
  1392                           ; simple_byte           13     7 (average)
  1393                           ;	Chosen strategy is simple_byte
  1394  000E78  5003               	movf	??_keypad_map,w,c
  1395  000E7A  0A01               	xorlw	1	; case 1
  1396  000E7C  B4D8               	btfsc	status,2,c
  1397  000E7E  D7DB               	goto	l19
  1398  000E80  0A03               	xorlw	3	; case 2
  1399  000E82  B4D8               	btfsc	status,2,c
  1400  000E84  D7DD               	goto	l21
  1401  000E86  0A06               	xorlw	6	; case 4
  1402  000E88  B4D8               	btfsc	status,2,c
  1403  000E8A  D7DF               	goto	l22
  1404  000E8C  0A0C               	xorlw	12	; case 8
  1405  000E8E  B4D8               	btfsc	status,2,c
  1406  000E90  D7E1               	goto	l23
  1407  000E92  D7E5               	goto	l24
  1408  000E94                     __end_of_keypad_map:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           prodh	equ	0xFF4
  1415                           prodl	equ	0xFF3
  1416                           indf0	equ	0xFEF
  1417                           fsr0h	equ	0xFEA
  1418                           fsr0l	equ	0xFE9
  1419                           indf2	equ	0xFDF
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _keypad_setup *****************
  1425 ;; Defined at:
  1426 ;;		line 12 in file "main.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text13
  1454  0010D4                     __ptext13:
  1455                           	opt stack 0
  1456  0010D4                     _keypad_setup:
  1457                           	opt stack 30
  1458                           
  1459                           ;main.c: 13: PORTD = 0x00;
  1460                           
  1461                           ;incstack = 0
  1462  0010D4  0E00               	movlw	0
  1463  0010D6  6E83               	movwf	3971,c	;volatile
  1464                           
  1465                           ;main.c: 14: TRISD = 0xF0;
  1466  0010D8  0EF0               	movlw	240
  1467  0010DA  6E95               	movwf	3989,c	;volatile
  1468  0010DC  0012               	return		;funcret
  1469  0010DE                     __end_of_keypad_setup:
  1470                           	opt stack 0
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           prodh	equ	0xFF4
  1476                           prodl	equ	0xFF3
  1477                           indf0	equ	0xFEF
  1478                           fsr0h	equ	0xFEA
  1479                           fsr0l	equ	0xFE9
  1480                           indf2	equ	0xFDF
  1481                           fsr2h	equ	0xFDA
  1482                           fsr2l	equ	0xFD9
  1483                           status	equ	0xFD8
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           prodh	equ	0xFF4
  1489                           prodl	equ	0xFF3
  1490                           indf0	equ	0xFEF
  1491                           fsr0h	equ	0xFEA
  1492                           fsr0l	equ	0xFE9
  1493                           indf2	equ	0xFDF
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8
  1497                           
  1498                           	psect	rparam
  1499  0000                     tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           indf0	equ	0xFEF
  1506                           fsr0h	equ	0xFEA
  1507                           fsr0l	equ	0xFE9
  1508                           indf2	equ	0xFDF
  1509                           fsr2h	equ	0xFDA
  1510                           fsr2l	equ	0xFD9
  1511                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 24
		 -> uart_printd@buf(COMRAM[24]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 24
		 -> uart_printd@buf(COMRAM[24]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 24
		 -> uart_printd@buf(COMRAM[24]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 24
		 -> uart_printd@buf(COMRAM[24]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 24
		 -> uart_printd@buf(COMRAM[24]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 24
		 -> uart_printd@buf(COMRAM[24]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 24
		 -> uart_printd@buf(COMRAM[24]), 

    uart_print@c	PTR const unsigned char  size(2) Largest target is 24
		 -> uart_printd@buf(COMRAM[24]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_uart_printd
    _uart_printd->_itoa
    _uart_print->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _kpd_read->_keypad_map

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3528
                                             52 COMRAM     2     2      0
                       _keypad_setup
                           _kpd_read
                              _setup
                         _uart_print
                        _uart_printd
                         _uart_setup
 ---------------------------------------------------------------------------------
 (1) _uart_setup                                           2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _uart_printd                                         28    24      4    2521
                                             24 COMRAM    28    24      4
                               _itoa
                         _uart_print
 ---------------------------------------------------------------------------------
 (2) _uart_print                                           6     4      2     575
                                              6 COMRAM     6     4      2
                             _strlen
                          _uart_send
 ---------------------------------------------------------------------------------
 (3) _uart_send                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1698
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpd_read                                            21    19      2     333
                                              4 COMRAM     9     7      2
                         _keypad_map
 ---------------------------------------------------------------------------------
 (2) _keypad_map                                           4     2      2     174
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _keypad_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad_setup
   _kpd_read
     _keypad_map
   _setup
   _uart_print
     _strlen
     _uart_send
   _uart_printd
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _uart_print
       _strlen
       _uart_send
   _uart_setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     36      36       1       56.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BIGRAM             CFF      0       0      31        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Mar 17 19:56:32 2018

                     l21 0E40                       l22 0E4A                       l23 0E54  
                     l31 0E26                       l24 0E5E                       l18 0E68  
                     l19 0E36                       l28 0DC4                       l39 0EB4  
                     l82 0F2E                       l83 0EF8                       l77 10CE  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000             __CFG_CP4$OFF 000000  
           __CFG_CP5$OFF 000000              __CFG_LVP$ON 000000                      l510 0FDA  
                    l511 0FE4                      l423 0D14                      l520 105E  
                    l521 1068                      l425 0D4E                      l506 0FBA  
                    l426 0D8C                      l507 0FB2                      l419 1012  
                    l516 1046                      l517 103E                      l650 0F56  
                    l651 0F52             __CFG_CPB$OFF 000000                      u210 0FBE  
                    u310 0F26                      u240 104A                      u260 0F78  
                    u317 0F1C                      u370 0E2A                      u354 0DD4  
           __CFG_CPD$OFF 000000                      u355 0DD0                      u267 0F6E  
           __CFG_WDT$OFF 000000                     l1048 0DBC                     STR_1 0D01  
                   STR_2 0D09                     STR_3 0D07             __CFG_PWRT$ON 000000  
                   _main 0E94                     _itoa 0FEE                     fsr0h 000FEA  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr2l 000FD9                     _utoa 0D0C  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    ?_itoa 0011                    ?_utoa 0008  
        __end_of___lwdiv 0FEE          __end_of___lwmod 1072                    _SPBRG 000FAF  
                  _PORTD 000F83                    _TRISD 000F95                    _TXREG 000FAD  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000            __CFG_WRT4$OFF 000000            __CFG_WRT5$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000           __CFG_EBTR4$OFF 000000  
         __CFG_EBTR5$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _setup 10B6  
                  main@x 0035                    tablat 000FF5                    utoa@c 0010  
                  utoa@v 000E                    status 000FD8          __initialization 10DE  
           __end_of_main 0EEE             __end_of_itoa 1030             __end_of_utoa 0DB0  
                 ??_main 0035                   ??_itoa 0017                   ??_utoa 000E  
          __activetblptr 000003                   ?_setup 0001          __CFG_BBSIZ$1024 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___lwdiv 0005  
              ??___lwmod 0005         __end_of_kpd_read 0E34            ?_keypad_setup 0001  
                 _strlen 0F48                   itoa@cp 0017             ?_uart_printd 0019  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 10DE  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
         ??_keypad_setup 0001            __end_of_setup 10C8          __CFG_OSC$IRCIO7 000000  
                ??_setup 0001                  ?_strlen 0001       __size_of_uart_send 000C  
              ?_kpd_read 0005                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 0F9C                  ___lwmod 1030             __psmallconst 0D00  
                __pcinit 10DE                  __ramtop 0D00                  __ptext0 0E94  
                __ptext1 109C                  __ptext2 1072                  __ptext3 0EEE  
                __ptext4 10C8                  __ptext5 0F48                  __ptext6 0FEE  
                __ptext7 0D0C                  __ptext8 1030                  __ptext9 0F9C  
             _keypad_map 0E34          __size_of_strlen 0054             kpd_read@temp 000B  
   __size_of_uart_printd 002A     end_of_initialization 10DE     __end_of_keypad_setup 10DE  
                itoa@buf 0011                  itoa@val 0013               ??_kpd_read 0007  
      __end_of_uart_send 10D4                _RCSTAbits 000FAB                  utoa@buf 0008  
                utoa@val 000A                  strlen@s 0001               _uart_setup 109C  
             _uart_print 0EEE                _PORTAbits 000F80              uart_print@c 0007  
            uart_print@i 000B                _TRISAbits 000F92                _TRISCbits 000F94  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8              ?_keypad_map 0001  
         __end_of_strlen 0F9C      start_initialization 10DE      __CFG_BOREN$BOACTIVE 000000  
       __CFG_LPT1OSC$OFF 000000              ?_uart_setup 0001              ?_uart_print 0007  
               ??_strlen 0003    __size_of_keypad_setup 000A      __size_of_keypad_map 0060  
      __size_of_kpd_read 0084         ___lwdiv@dividend 0001                 ?___lwdiv 0001  
               ?___lwmod 0001             _keypad_setup 10D4              __smallconst 0D00  
       ___lwdiv@quotient 0005           __size_of_setup 0012      __size_of_uart_setup 001A  
    __size_of_uart_print 005A                 _PIE1bits 000F9D         __CFG_WDTPS$32768 000000  
              _uart_send 10C8               uart_send@c 0001            ??_uart_printd 001D  
               __Hrparam 0000                 __Lrparam 0000                kpd_read@i 000D  
             ?_uart_send 0001         __size_of___lwdiv 0052         __size_of___lwmod 0042  
           ??_keypad_map 0003          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 10B6                 __ptext11 0DB0                 __ptext12 0E34  
               __ptext13 10D4      __end_of_uart_printd 109C                 _kpd_read 0DB0  
          __size_of_main 005A            __size_of_itoa 0042            __size_of_utoa 00A4  
     __end_of_keypad_map 0E94            kpd_read@total 0009             ??_uart_setup 0003  
           ??_uart_print 0009              _OSCTUNEbits 000F9B                 itoa@base 0015  
       ___lwmod@dividend 0001       __end_of_uart_setup 10B6       __end_of_uart_print 0F48  
             _OSCCONbits 000FD3              ??_uart_send 0001           uart_setup@baud 0001  
               utoa@base 000C           uart_printd@buf 001D          ___lwmod@divisor 0003  
               strlen@cp 0005          ___lwmod@counter 0005              _uart_printd 1072  
          keypad_map@num 0001             uart_printd@b 001B             uart_printd@d 0019  
